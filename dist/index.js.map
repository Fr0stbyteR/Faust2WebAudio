{"version":3,"sources":["webpack://Faust2WebAudio/webpack/universalModuleDefinition","webpack://Faust2WebAudio/webpack/bootstrap","webpack://Faust2WebAudio/./node_modules/@babel/runtime/helpers/asyncToGenerator.js","webpack://Faust2WebAudio/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://Faust2WebAudio/./node_modules/@babel/runtime/regenerator/index.js","webpack://Faust2WebAudio/./node_modules/crypto-libraries/sha1.js","webpack://Faust2WebAudio/./node_modules/regenerator-runtime/runtime.js","webpack://Faust2WebAudio/./src/Faust.ts","webpack://Faust2WebAudio/./src/FaustAudioWorkletNode.ts","webpack://Faust2WebAudio/./src/FaustAudioWorkletProcessor.ts","webpack://Faust2WebAudio/./src/FaustOfflineProcessor.ts","webpack://Faust2WebAudio/./src/FaustWasmToScriptProcessor.ts","webpack://Faust2WebAudio/./src/LibFaustLoader.js","webpack://Faust2WebAudio/./src/index.ts","webpack://Faust2WebAudio/./src/utils.ts","webpack://Faust2WebAudio/./src/wasm/mixer32.wasm"],"names":["Faust","constructor","options","libFaust","createWasmCDSPFactoryFromString","deleteAllWasmCDSPFactories","expandCDSPFromString","getCLibFaustVersion","getWasmCModule","getWasmCModuleSize","getWasmCHelpers","freeWasmCModule","freeCMemory","cleanupAfterException","getErrorAfterException","getLibFaustVersion","generateCAuxFilesFromString","debug","dspTable","workletProcessors","_log","offlineProcessor","FaustOfflineProcessor","jsLocation","wasmLocation","dataLocation","logHandler","loadLibFaust","LibFaustLoader","load","importLibFaustFunctions","ready","cwrap","UTF8ToString","getNode","code","optionsIn","audioCtx","voices","useWorklet","bufferSize","plotHandler","args","argv","utils","compileCodes","compiledDsp","getAudioWorkletNode","getScriptProcessorNode","inspect","plot","compileCode","factoryName","argvIn","internalMemory","codeSize","lengthBytesUTF8","$code","_malloc","name","nameSize","$name","$errorMsg","stringToUTF8","push","ptrSize","$argv","length","argvBuffer$","Int32Array","HEAP32","buffer","i","size$arg","$arg","time1","performance","now","$moduleCode","time2","log","errorMsg","Error","$compiledCode","compiledCodeSize","ui8Code","Uint8Array","HEAP8","$helpersCode","helpersCode","_free","e","strArgv","join","shaKey","sha1","hash","msgFormat","effectCode","dspCompiledCode","effectCompiledCode","compiledCodes","dsp","effect","compileDsp","expandCode","$shaKey","$expandedCode","expandedCode","error","codes","WebAssembly","compile","dspModule","dspMeta","undefined","json","match","replace","meta","JSON","parse","message","effectModule","effectMeta","FaustWasmToScriptProcessor","compiledDspWithCodes","id","indexOf","strProcessor","toString","stringify","FaustAudioWorkletProcessorWrapper","url","window","URL","createObjectURL","Blob","type","audioWorklet","addModule","FaustAudioWorkletNode","mixer32Module","deleteDsp","stringifyDspTable","strTable","key","strCode","btoa","parseDspTable","str","strCodes","atob","then","getDiagram","FS","readFile","encoding","fs","console","msg","AudioWorkletNode","numberOfInputs","inputs","numberOfOutputs","outputs","channelCount","Math","max","outputChannelCount","channelCountMode","channelInterpretation","processorOptions","onprocessorerror","outputHandler","inputsItems","outputsItems","fPitchwheelLabel","fCtrlLabel","port","onmessage","data","path","value","index","events","Array","fill","map","parseUI","ui","parameters","forEach","p","automationRate","group","parseGroup","items","parseItems","item","parseItem","address","midi","strMidi","trim","min","matched","parseInt","keyOn","channel","pitch","velocity","postMessage","keyOff","allNotesOff","ctrlChange","ctrlIn","valueIn","ctrl","remap","param","get","setValueAtTime","context","currentTime","pitchWheel","wheel","pw","midiMessage","cmd","data1","data2","metadata","setParamValue","getParamValue","setOutputParamHandler","handler","getOutputParamHandler","getNumInputs","getNumOutputs","getParams","getJSON","o","r","label","getUI","destroy","close","FaustConst","faustData","FaustAudioWorkletProcessor","AudioWorkletProcessor","obj","callback","endsWith","defaultValue","init","minValue","maxValue","parseItem2","pathTable$","parameterDescriptors","params","destroyed","dspInstance","effectInstance","mixerInstance","memory","$ins","$outs","dspInChannnels","dspOutChannnels","numIn","numOut","sampleSize","outputsTimer","$audioHeap","$$audioHeapInputs","$$audioHeapOutputs","$audioHeapInputs","$audioHeapOutputs","$dsp","factory","HEAP","HEAPF32","$effect","$mixing","fFreqLabel$","fGateLabel$","fGainLabel$","fDate","$$audioHeapMixing","$audioHeapMixing","mixer","dspVoices$","dspVoicesState","dspVoicesLevel","dspVoicesDate","kActiveVoice","kFreeVoice","kReleaseVoice","kNoVoice","$buffer","cachedEvents","computeHandler","handleMessage","instantiateWasm","exports","Float32Array","size","setup","createWasmMemory","imports","createWasmImport","Instance","mixerImports","print","updateOutputs","val","findPath","$voice","dspInChans","subarray","dspOutChans","sampleRate","getPlayingVoice","voice","oldestDatePlaying","Number","MAX_VALUE","allocVoice","instanceClear","getFreeVoice","voiceRelease","voicePlaying","oldestDateRelease","$","midiToFreq","$gate","process","input","output","chan","dspInput","set","paramArray","clearOutput","compute","mixVoice","dspOutput","printMemory","registerProcessor","importObject","env","memoryBase","tableBase","_abs","abs","_acosf","acos","_asinf","asin","_atanf","atan","_atan2f","atan2","_ceilf","ceil","_cosf","cos","_expf","exp","_floorf","floor","_fmodf","x","y","_logf","_log10f","log10","_max_f","_min_f","_remainderf","round","_powf","pow","_roundf","fround","_sinf","sin","_sqrtf","sqrt","_tanf","tan","_acoshf","acosh","_asinhf","asinh","_atanhf","atanh","_coshf","cosh","_sinhf","sinh","_tanhf","tanh","_acos","_asin","_atan","_atan2","_ceil","_cos","_exp","_floor","_fmod","_log10","_max_","_min_","_remainder","_pow","_round","_sin","_sqrt","_tan","_acosh","_asinh","_atanh","_cosh","_sinh","_tanh","table","Table","initial","element","instantiate","plotted","computed","j","faust","initNode","node","createScriptProcessor","inputBuffer","getChannelData","outputBuffer","onaudioprocess","getSampleRate","instanceInit","instanceConstants","instanceResetUserInterface","declare","Object","keys","setComputeHandler","getComputeHandler","k","bufferSizeIn","mixerObject","fetchModule","toExport","module","esm","esmKeys","default","exported","locateFile","dir","LibFaust","f","calledRun","_onRuntimeInitialized","onRuntimeInitialized","len","u","charCodeAt","ab2str","buf","String","fromCharCode","apply","str2ab","ArrayBuffer","bufView","strLen","atoUint6","nChr","atoab","sBase64","nBlocksSize","sB64Enc","nInLen","nOutLen","taBytes","nMod3","nMod4","nUint24","nOutIdx","nInIdx","heap2Str","Module","mixer32DataURI","split","note","v","mn0","mx0","mn1","mx1","findPathClosure","voicesIn","pow2limit","n","effectSize","memorySize","Memory","maximum","toArgv","arg","isArray","s"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;QCVA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA,mC;;;;;;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA;;AAEA,iC;;;;;;;;;;;ACfA,iBAAiB,mBAAO,CAAC,0EAAqB;;;;;;;;;;;;;ACA9C;AAAA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB,+CAA+C;AAC/C,iBAAiB,OAAO;AACxB,mBAAmB;AACnB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA,0BAA0B;AAC1B;;AAEA;AACA;AACA,mDAAmD;AACnD,yDAAyD,OAAO;AAChE;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA,yCAAyC;;AAEzC;AACA,mCAAmC;AACnC,kCAAkC;AAClC;;AAEA,qBAAqB,KAAK;AAC1B;AACA,yBAAyB,MAAM,OAAO;AACtC;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;;AAEA;;AAEA,qBAAqB,KAAK;AAC1B;;AAEA;AACA,yBAAyB,OAAO;AAChC,0BAA0B,MAAM;;AAEhC;AACA;;AAEA;AACA,yBAAyB,MAAM;AAC/B,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,YAAY;;AAEjC;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,aAAa,YAAY;AACzB,yDAAyD;AACzD;AACA;;AAEA,2CAA2C;AAC3C,gDAAgD;AAChD,+CAA+C,EAAE;AACjD;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C,wCAAwC;AACxC,uDAAuD;AACvD,wCAAwC;AACxC;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;;AAEe,mEAAI,EAAC;;;;;;;;;;;;AC/JpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,KAAK;AACL,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;;AAEA;AACA;AACA,wCAAwC,WAAW;AACnD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC,cAAc;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iCAAiC,kBAAkB;AACnD;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB;;AAEjB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,8CAA8C,QAAQ;AACtD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA,WAAW;AACX;AACA;AACA;;AAEA,WAAW;AACX;AACA;AACA;;AAEA,WAAW;AACX;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,8CAA8C,QAAQ;AACtD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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Faust2WebAudio\"] = factory();\n\telse\n\t\troot[\"Faust2WebAudio\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","module.exports = require(\"regenerator-runtime\");\n","/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */\n/* SHA-1 (FIPS 180-4) implementation in JavaScript                    (c) Chris Veness 2002-2019  */\n/*                                                                                   MIT Licence  */\n/* www.movable-type.co.uk/scripts/sha1.html                                                       */\n/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */\n\n\n/**\n * SHA-1 hash function reference implementation.\n *\n * This is an annotated direct implementation of FIPS 180-4, without any optimisations. It is\n * intended to aid understanding of the algorithm rather than for production use.\n *\n * While it could be used where performance is not critical, I would recommend using the ‘Web\n * Cryptography API’ (developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/digest) for the browser,\n * or the ‘crypto’ library (nodejs.org/api/crypto.html#crypto_class_hash) in Node.js.\n *\n * See csrc.nist.gov/groups/ST/toolkit/secure_hashing.html\n *     csrc.nist.gov/groups/ST/toolkit/examples.html\n */\nclass Sha1 {\n\n    /**\n     * Generates SHA-1 hash of string.\n     *\n     * @param   {string} msg - (Unicode) string to be hashed.\n     * @param   {Object} [options]\n     * @param   {string} [options.msgFormat=string] - Message format: 'string' for JavaScript string\n     *   (gets converted to UTF-8 for hashing); 'hex-bytes' for string of hex bytes ('616263' ≡ 'abc') .\n     * @param   {string} [options.outFormat=hex] - Output format: 'hex' for string of contiguous\n     *   hex bytes; 'hex-w' for grouping hex bytes into groups of (4 byte / 8 character) words.\n     * @returns {string} Hash of msg as hex character string.\n     *\n     * @example\n     *   import Sha1 from './sha1.js';\n     *   const hash = Sha1.hash('abc'); // 'a9993e364706816aba3e25717850c26c9cd0d89d'\n     */\n    static hash(msg, options) {\n        const defaults = { msgFormat: 'string', outFormat: 'hex' };\n        const opt = Object.assign(defaults, options);\n\n        switch (opt.msgFormat) {\n            default: // default is to convert string to UTF-8, as SHA only deals with byte-streams\n            case 'string':   msg = utf8Encode(msg);       break;\n            case 'hex-bytes':msg = hexBytesToString(msg); break; // mostly for running tests\n        }\n\n        // constants [§4.2.1]\n        const K = [ 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6 ];\n\n        // initial hash value [§5.3.1]\n        const H = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n\n        // PREPROCESSING [§6.1.1]\n\n        msg += String.fromCharCode(0x80);  // add trailing '1' bit (+ 0's padding) to string [§5.1.1]\n\n        // convert string msg into 512-bit/16-integer blocks arrays of ints [§5.2.1]\n        const l = msg.length/4 + 2; // length (in 32-bit integers) of msg + ‘1’ + appended length\n        const N = Math.ceil(l/16);  // number of 16-integer-blocks required to hold 'l' ints\n        const M = new Array(N);\n\n        for (let i=0; i<N; i++) {\n            M[i] = new Array(16);\n            for (let j=0; j<16; j++) {  // encode 4 chars per integer, big-endian encoding\n                M[i][j] = (msg.charCodeAt(i*64+j*4+0)<<24) | (msg.charCodeAt(i*64+j*4+1)<<16)\n                        | (msg.charCodeAt(i*64+j*4+2)<< 8) | (msg.charCodeAt(i*64+j*4+3)<< 0);\n            } // note running off the end of msg is ok 'cos bitwise ops on NaN return 0\n        }\n        // add length (in bits) into final pair of 32-bit integers (big-endian) [§5.1.1]\n        // note: most significant word would be (len-1)*8 >>> 32, but since JS converts\n        // bitwise-op args to 32 bits, we need to simulate this by arithmetic operators\n        M[N-1][14] = ((msg.length-1)*8) / Math.pow(2, 32); M[N-1][14] = Math.floor(M[N-1][14]);\n        M[N-1][15] = ((msg.length-1)*8) & 0xffffffff;\n\n        // HASH COMPUTATION [§6.1.2]\n\n        for (let i=0; i<N; i++) {\n            const W = new Array(80);\n\n            // 1 - prepare message schedule 'W'\n            for (let t=0;  t<16; t++) W[t] = M[i][t];\n            for (let t=16; t<80; t++) W[t] = Sha1.ROTL(W[t-3] ^ W[t-8] ^ W[t-14] ^ W[t-16], 1);\n\n            // 2 - initialise five working variables a, b, c, d, e with previous hash value\n            let a = H[0], b = H[1], c = H[2], d = H[3], e = H[4];\n\n            // 3 - main loop (use JavaScript '>>> 0' to emulate UInt32 variables)\n            for (let t=0; t<80; t++) {\n                const s = Math.floor(t/20); // seq for blocks of 'f' functions and 'K' constants\n                const T = (Sha1.ROTL(a, 5) + Sha1.f(s, b, c, d) + e + K[s] + W[t]) >>> 0;\n                e = d;\n                d = c;\n                c = Sha1.ROTL(b, 30) >>> 0;\n                b = a;\n                a = T;\n            }\n\n            // 4 - compute the new intermediate hash value (note 'addition modulo 2^32' – JavaScript\n            // '>>> 0' coerces to unsigned UInt32 which achieves modulo 2^32 addition)\n            H[0] = (H[0]+a) >>> 0;\n            H[1] = (H[1]+b) >>> 0;\n            H[2] = (H[2]+c) >>> 0;\n            H[3] = (H[3]+d) >>> 0;\n            H[4] = (H[4]+e) >>> 0;\n        }\n\n        // convert H0..H4 to hex strings (with leading zeros)\n        for (let h=0; h<H.length; h++) H[h] = ('00000000'+H[h].toString(16)).slice(-8);\n\n        // concatenate H0..H4, with separator if required\n        const separator = opt.outFormat=='hex-w' ? ' ' : '';\n\n        return H.join(separator);\n\n        /* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */\n\n        function utf8Encode(str) {\n            try {\n                return new TextEncoder().encode(str, 'utf-8').reduce((prev, curr) => prev + String.fromCharCode(curr), '');\n            } catch (e) { // no TextEncoder available?\n                return unescape(encodeURIComponent(str)); // monsur.hossa.in/2012/07/20/utf-8-in-javascript.html\n            }\n        }\n\n        function hexBytesToString(hexStr) { // convert string of hex numbers to a string of chars (eg '616263' -> 'abc').\n            const str = hexStr.replace(' ', ''); // allow space-separated groups\n            return str=='' ? '' : str.match(/.{2}/g).map(byte => String.fromCharCode(parseInt(byte, 16))).join('');\n        }\n    }\n\n\n    /**\n     * Function 'f' [§4.1.1].\n     * @private\n     */\n    static f(s, x, y, z)  {\n        switch (s) {\n            case 0: return (x & y) ^ (~x & z);          // Ch()\n            case 1: return  x ^ y  ^  z;                // Parity()\n            case 2: return (x & y) ^ (x & z) ^ (y & z); // Maj()\n            case 3: return  x ^ y  ^  z;                // Parity()\n        }\n    }\n\n\n    /**\n     * Rotates left (circular left shift) value x by n positions [§3.2.5].\n     * @private\n     */\n    static ROTL(x, n) {\n        return (x<<n) | (x>>>(32-n));\n    }\n\n}\n\n\n/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */\n\nexport default Sha1;\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","/* eslint-disable import/named */\n/* eslint-disable no-console */\nimport sha1 from \"crypto-libraries/sha1\";\nimport { LibFaustLoader, LibFaust } from \"./LibFaustLoader\";\nimport { FaustWasmToScriptProcessor } from \"./FaustWasmToScriptProcessor\";\nimport { FaustAudioWorkletProcessorWrapper } from \"./FaustAudioWorkletProcessor\";\nimport { FaustAudioWorkletNode } from \"./FaustAudioWorkletNode\";\n\nimport * as utils from \"./utils\";\nimport { FaustOfflineProcessor } from \"./FaustOfflineProcessor\";\nimport { TCompiledDsp, TFaustCompileOptions, FaustScriptProcessorNode, TFaustCompileArgs, TCompiledCode, TCompiledCodes, TAudioNodeOptions, TCompiledStrCodes } from \"./types\";\n\n// import * as Binaryen from \"binaryen\";\n\n/**\n * Main Faust class,\n * usage: `new Faust().ready.then(faust => any);`\n *\n * @export\n * @class Faust\n */\nexport class Faust {\n    /**\n     * The libfaust Wasm Emscripten Module\n     *\n     * @private\n     * @type {LibFaust}\n     * @memberof Faust\n     */\n    private libFaust: LibFaust;\n    private createWasmCDSPFactoryFromString: ($name: number, $code: number, argc: number, $argv: number, $errorMsg: number, internalMemory: boolean) => number;\n    private deleteAllWasmCDSPFactories: () => void;\n    private expandCDSPFromString: ($name: number, $code: number, argc: number, $argv: number, $shaKey: number, $errorMsg: number) => number;\n    private getCLibFaustVersion: () => number;\n    private getWasmCModule: ($moduleCode: number) => number;\n    private getWasmCModuleSize: ($moduleCode: number) => number;\n    private getWasmCHelpers: ($moduleCode: number) => number;\n    private freeWasmCModule: ($moduleCode: number) => void;\n    private freeCMemory: ($: number) => number;\n    private cleanupAfterException: () => void;\n    private getErrorAfterException: () => number;\n    private getLibFaustVersion: () => string;\n    private generateCAuxFilesFromString: ($name: number, $code: number, argc: number, $argv: number, $errorMsg: number) => number;\n    /**\n     * Debug mode, set to true to print out each message\n     *\n     * @type {boolean}\n     * @memberof Faust\n     */\n    debug: boolean = false;\n    /**\n     * An object to storage compiled dsp with it's sha1\n     *\n     * @private\n     * @type {{ [shaKey: string]: TCompiledDsp }}\n     * @memberof Faust\n     */\n    private dspTable: { [shaKey: string]: TCompiledDsp } = {};\n    /**\n     * Registered WorkletProcessor names\n     *\n     * @private\n     * @type {string[]}\n     * @memberof Faust\n     */\n    private workletProcessors: string[] = [];\n    private _log: string[] = [];\n    /**\n     * Offline processor used to plot\n     *\n     * @private\n     * @type {FaustOfflineProcessor}\n     * @memberof Faust\n     */\n    private offlineProcessor: FaustOfflineProcessor = new FaustOfflineProcessor();\n    /**\n     * Location of `libfaust-wasm.js`\n     *\n     * @private\n     * @type {string}\n     * @memberof Faust\n     */\n    private jsLocation: string;\n    /**\n     * Location of `libfaust-wasm.wasm`\n     *\n     * @private\n     * @type {string}\n     * @memberof Faust\n     */\n    private wasmLocation: string;\n    /**\n     * Location of `libfaust-wasm.data`\n     *\n     * @private\n     * @type {string}\n     * @memberof Faust\n     */\n    private dataLocation: string;\n\n    /**\n     * Creates an instance of Faust\n     * usage: `new Faust().ready.then(faust => any);`\n     *\n     * @param {{ debug?: boolean; jsLocation?: string; wasmLocation?: string; dataLocation?: string }} [options]\n     * @memberof Faust\n     */\n    constructor(options?: { debug?: boolean; jsLocation?: string; wasmLocation?: string; dataLocation?: string }) {\n        this.debug = !!(options && options.debug);\n        this.jsLocation = options.jsLocation || \"http://fr0stbyter.github.io/faust2webaudio/dist/libfaust-wasm.js\";\n        this.wasmLocation = options.wasmLocation || \"http://fr0stbyter.github.io/faust2webaudio/dist/libfaust-wasm.wasm\";\n        this.dataLocation = options.dataLocation || \"http://fr0stbyter.github.io/faust2webaudio/dist/libfaust-wasm.data\";\n    }\n    /**\n     * Load a libfaust module\n     *\n     * @returns {Promise<Faust>}\n     * @memberof Faust\n     */\n    async loadLibFaust(): Promise<Faust> {\n        if (this.libFaust) return this;\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        this.libFaust = await LibFaustLoader.load(this.jsLocation, this.wasmLocation, this.dataLocation);\n        this.importLibFaustFunctions();\n        return this;\n    }\n    /**\n     * A promise to resolve when libfaust is ready.\n     *\n     * @readonly\n     * @type {Promise<Faust>}\n     * @memberof Faust\n     */\n    get ready(): Promise<Faust> {\n        return this.loadLibFaust();\n    }\n    private importLibFaustFunctions(): void {\n        if (!this.libFaust) return;\n        // Low-level API\n        this.createWasmCDSPFactoryFromString = this.libFaust.cwrap(\"createWasmCDSPFactoryFromString\", \"number\", [\"number\", \"number\", \"number\", \"number\", \"number\", \"number\"]);\n        this.deleteAllWasmCDSPFactories = this.libFaust.cwrap(\"deleteAllWasmCDSPFactories\", null, []);\n        this.expandCDSPFromString = this.libFaust.cwrap(\"expandCDSPFromString\", \"number\", [\"number\", \"number\", \"number\", \"number\", \"number\", \"number\"]);\n        this.getCLibFaustVersion = this.libFaust.cwrap(\"getCLibFaustVersion\", \"number\", []);\n        this.getWasmCModule = this.libFaust.cwrap(\"getWasmCModule\", \"number\", [\"number\"]);\n        this.getWasmCModuleSize = this.libFaust.cwrap(\"getWasmCModuleSize\", \"number\", [\"number\"]);\n        this.getWasmCHelpers = this.libFaust.cwrap(\"getWasmCHelpers\", \"number\", [\"number\"]);\n        this.freeWasmCModule = this.libFaust.cwrap(\"freeWasmCModule\", null, [\"number\"]);\n        this.freeCMemory = this.libFaust.cwrap(\"freeCMemory\", null, [\"number\"]);\n        this.cleanupAfterException = this.libFaust.cwrap(\"cleanupAfterException\", null, []);\n        this.getErrorAfterException = this.libFaust.cwrap(\"getErrorAfterException\", \"number\", []);\n        this.getLibFaustVersion = () => this.libFaust.UTF8ToString(this.getCLibFaustVersion());\n        this.generateCAuxFilesFromString = this.libFaust.cwrap(\"generateCAuxFilesFromString\", \"number\", [\"number\", \"number\", \"number\", \"number\", \"number\"]);\n    }\n    /**\n     * Create a AudioNode from dsp source code with options.\n     *\n     * @param {string} code - the source code\n     * @param {TFaustCompileOptions} optionsIn - options with audioCtx, bufferSize, voices, useWorklet, args, plot and plotHandler\n     * @returns {Promise<FaustAudioWorkletNode | FaustScriptProcessorNode>}\n     * @memberof Faust\n     */\n    async getNode(code: string, optionsIn: TFaustCompileOptions): Promise<FaustAudioWorkletNode | FaustScriptProcessorNode> {\n        const { audioCtx, voices, useWorklet, bufferSize, plotHandler, args } = optionsIn;\n        const argv = utils.toArgv(args);\n        const compiledDsp = await this.compileCodes(code, argv, !voices);\n        if (!compiledDsp) return null;\n        const options = { compiledDsp, audioCtx, voices, plotHandler, bufferSize: useWorklet ? 128 : bufferSize };\n        return useWorklet ? this.getAudioWorkletNode(options) : this.getScriptProcessorNode(options);\n    }\n    /**\n     * Get DSP information\n     *\n     * @param {string} code\n     * @param {{ voices?: number; args?: TFaustCompileArgs }} optionsIn\n     * @returns {Promise<TCompiledDsp>}\n     * @memberof Faust\n     */\n    async inspect(code: string, optionsIn: { voices?: number; args?: TFaustCompileArgs }): Promise<TCompiledDsp> {\n        const { voices, args } = optionsIn;\n        const argv = utils.toArgv(args);\n        return this.compileCodes(code, argv, !voices);\n    }\n    /**\n     * Plot a dsp offline.\n     *\n     * @param {{ code?: string; size?: number; sampleRate?: number; args?: TFaustCompileArgs }} [optionsIn]\n     * @returns {Promise<Float32Array[]>}\n     * @memberof Faust\n     */\n    async plot(optionsIn?: { code?: string; size?: number; sampleRate?: number; args?: TFaustCompileArgs }): Promise<Float32Array[]> {\n        let compiledDsp;\n        const argv = utils.toArgv(optionsIn.args);\n        if (optionsIn.code) {\n            compiledDsp = await this.compileCodes(optionsIn.code, argv, true);\n            if (!compiledDsp) return null;\n        }\n        return this.offlineProcessor.plot({ compiledDsp, ...optionsIn });\n    }\n    /**\n     * Generate Uint8Array and helpersCode from a dsp source code\n     *\n     * @private\n     * @param {string} factoryName - Class name of the source code\n     * @param {string} code - dsp source code\n     * @param {string[]} argvIn - Array of paramaters to be given to the Faust compiler\n     * @param {boolean} internalMemory - Use internal Memory flag, false for poly, true for mono\n     * @returns {TCompiledCode} - An object with ui8Code, code, helpersCode\n     * @memberof Faust\n     */\n    private compileCode(factoryName: string, code: string, argvIn: string[], internalMemory: boolean): TCompiledCode {\n        const codeSize = this.libFaust.lengthBytesUTF8(code) + 1;\n        const $code = this.libFaust._malloc(codeSize);\n        const name = \"FaustDSP\";\n        const nameSize = this.libFaust.lengthBytesUTF8(name) + 1;\n        const $name = this.libFaust._malloc(nameSize);\n        const $errorMsg = this.libFaust._malloc(4096);\n\n        this.libFaust.stringToUTF8(name, $name, nameSize);\n        this.libFaust.stringToUTF8(code, $code, codeSize);\n\n        // Add 'cn' option with the factory name\n        const argv = argvIn || [];\n        argv.push(\"-cn\", factoryName);\n\n        // Prepare 'argv_aux' array for C side\n        const ptrSize = 4;\n        const $argv = this.libFaust._malloc(argv.length * ptrSize); // Get buffer from emscripten.\n        let argvBuffer$ = new Int32Array(this.libFaust.HEAP32.buffer, $argv, argv.length); // Get a integer view on the newly allocated buffer.\n        for (let i = 0; i < argv.length; i++) {\n            const size$arg = this.libFaust.lengthBytesUTF8(argv[i]) + 1;\n            const $arg = this.libFaust._malloc(size$arg);\n            this.libFaust.stringToUTF8(argv[i], $arg, size$arg);\n            argvBuffer$[i] = $arg;\n        }\n        try {\n            const time1 = performance.now();\n            const $moduleCode = this.createWasmCDSPFactoryFromString($name, $code, argv.length, $argv, $errorMsg, internalMemory);\n            const time2 = performance.now();\n            this.log(\"Faust compilation duration : \" + (time2 - time1));\n            const errorMsg = this.libFaust.UTF8ToString($errorMsg);\n            if (errorMsg) throw new Error(errorMsg);\n\n            if ($moduleCode === 0) return null;\n            const $compiledCode = this.getWasmCModule($moduleCode);\n            const compiledCodeSize = this.getWasmCModuleSize($moduleCode);\n            // Copy native 'binary' string in JavaScript Uint8Array\n            const ui8Code = new Uint8Array(compiledCodeSize);\n            for (let i = 0; i < compiledCodeSize; i++) {\n                // faster than 'getValue' which gets the type of access for each read...\n                ui8Code[i] = this.libFaust.HEAP8[$compiledCode + i];\n            }\n            const $helpersCode = this.getWasmCHelpers($moduleCode);\n            const helpersCode = this.libFaust.UTF8ToString($helpersCode);\n            // Free strings\n            this.libFaust._free($code);\n            this.libFaust._free($name);\n            this.libFaust._free($errorMsg);\n            // Free C allocated wasm module\n            this.freeWasmCModule($moduleCode);\n            // Get an updated integer view on the newly allocated buffer after possible emscripten memory grow\n            argvBuffer$ = new Int32Array(this.libFaust.HEAP32.buffer, $argv, argv.length);\n            // Free 'argv' C side array\n            for (let i = 0; i < argv.length; i++) {\n                this.libFaust._free(argvBuffer$[i]);\n            }\n            this.libFaust._free($argv);\n            return { ui8Code, code, helpersCode };\n        } catch (e) {\n            // libfaust is compiled without C++ exception activated, so a JS exception is throwed and catched here\n            const errorMsg = this.libFaust.UTF8ToString(this.getErrorAfterException());\n            this.cleanupAfterException();\n            // Report the Emscripten error\n            throw errorMsg ? new Error(errorMsg) : e;\n        }\n    }\n    /**\n     * createDSPFactoryAux\n     * Generate shaKey, effects, dsp, their Wasm Modules and helpers from a dsp source code\n     *\n     * @private\n     * @param {string} code - dsp source code\n     * @param {string[]} argv - Array of paramaters to be given to the Faust compiler\n     * @param {boolean} internalMemory - Use internal Memory flag, false for poly, true for mono\n     * @returns {Promise<TCompiledDsp>} - An object contains shaKey, empty polyphony map, original codes, modules and helpers\n     * @memberof Faust\n     */\n    private async compileCodes(code: string, argv: string[], internalMemory: boolean): Promise<TCompiledDsp> {\n        // Code memory type and argv in the SHAKey to differentiate compilation flags and Monophonic and Polyphonic factories\n        const strArgv = argv.join(\"\");\n        const shaKey = sha1.hash(code + (internalMemory ? \"internal_memory\" : \"external_memory\") + strArgv, { msgFormat: \"string\" });\n        const compiledDsp = this.dspTable[shaKey];\n        if (compiledDsp) {\n            this.log(\"Existing library : \" + shaKey);\n            // Existing factory, do not create it...\n            return compiledDsp;\n        }\n        this.log(\"libfaust.js version : \" + this.getLibFaustVersion());\n        // Create 'effect' expression\n        const effectCode = `adapt(1,1) = _; adapt(2,2) = _,_; adapt(1,2) = _ <: _,_; adapt(2,1) = _,_ :> _;\nadaptor(F,G) = adapt(outputs(F),inputs(G));\ndsp_code = environment{${code}};\nprocess = adaptor(dsp_code.process, dsp_code.effect) : dsp_code.effect;`;\n        const dspCompiledCode = this.compileCode(shaKey, code, argv, internalMemory);\n        let effectCompiledCode: TCompiledCode;\n        try {\n            effectCompiledCode = this.compileCode(shaKey + \"_\", effectCode, argv, internalMemory);\n        } catch (e) {} // eslint-disable-line no-empty\n        const compiledCodes = { dsp: dspCompiledCode, effect: effectCompiledCode };\n        return this.compileDsp(compiledCodes, shaKey);\n    }\n    /**\n     * From a DSP source file, creates a \"self-contained\" DSP source string where all needed librairies have been included.\n     * All compilations options are 'normalized' and included as a comment in the expanded string.\n     *\n     * @param {string} code - dsp source code\n     * @param {TFaustCompileArgs} args - Paramaters to be given to the Faust compiler\n     * @returns {string} \"self-contained\" DSP source string where all needed librairies\n     * @memberof Faust\n     */\n    expandCode(code: string, args?: TFaustCompileArgs): string {\n        this.log(\"libfaust.js version : \" + this.getLibFaustVersion());\n        // Allocate strings on the HEAP\n        const codeSize = this.libFaust.lengthBytesUTF8(code) + 1;\n        const $code = this.libFaust._malloc(codeSize);\n\n        const name = \"FaustDSP\";\n        const nameSize = this.libFaust.lengthBytesUTF8(name) + 1;\n        const $name = this.libFaust._malloc(nameSize);\n\n        const $shaKey = this.libFaust._malloc(64);\n        const $errorMsg = this.libFaust._malloc(4096);\n\n        this.libFaust.stringToUTF8(name, $name, nameSize);\n        this.libFaust.stringToUTF8(code, $code, codeSize);\n\n        const argvIn = args ? utils.toArgv(args) : [];\n        // Force \"wasm\" compilation\n        const argv = [...argvIn, \"-lang\", \"wasm\"];\n\n        // Prepare 'argv' array for C side\n        const ptrSize = 4;\n        const $argv = this.libFaust._malloc(argv.length * ptrSize); // Get buffer from emscripten.\n        let argvBuffer$ = new Int32Array(this.libFaust.HEAP32.buffer, $argv, argv.length); // Get a integer view on the newly allocated buffer.\n        for (let i = 0; i < argv.length; i++) {\n            const size$arg = this.libFaust.lengthBytesUTF8(argv[i]) + 1;\n            const $arg = this.libFaust._malloc(size$arg);\n            this.libFaust.stringToUTF8(argv[i], $arg, size$arg);\n            argvBuffer$[i] = $arg;\n        }\n        try {\n            const $expandedCode = this.expandCDSPFromString($name, $code, argv.length, $argv, $shaKey, $errorMsg);\n            const expandedCode = this.libFaust.UTF8ToString($expandedCode);\n            const errorMsg = this.libFaust.UTF8ToString($errorMsg);\n            if (errorMsg) this.error(errorMsg);\n            // Free strings\n            this.libFaust._free($code);\n            this.libFaust._free($name);\n            this.libFaust._free($shaKey);\n            this.libFaust._free($errorMsg);\n            // Free C allocated expanded string\n            this.freeCMemory($expandedCode);\n            // Get an updated integer view on the newly allocated buffer after possible emscripten memory grow\n            argvBuffer$ = new Int32Array(this.libFaust.HEAP32.buffer, $argv, argv.length);\n            // Free 'argv' C side array\n            for (let i = 0; i < argv.length; i++) {\n                this.libFaust._free(argvBuffer$[i]);\n            }\n            this.libFaust._free($argv);\n            return expandedCode;\n        } catch (e) {\n            // libfaust is compiled without C++ exception activated, so a JS exception is throwed and catched here\n            const errorMsg = this.libFaust.UTF8ToString(this.getErrorAfterException());\n            this.cleanupAfterException();\n            // Report the Emscripten error\n            throw errorMsg ? new Error(errorMsg) : e;\n        }\n    }\n    /**\n     * readDSPFactoryFromMachineAux\n     * Compile wasm modules from dsp and effect Uint8Arrays\n     *\n     * @private\n     * @param {TCompiledCodes} codes\n     * @param {string} shaKey\n     * @returns {Promise<TCompiledDsp>}\n     * @memberof Faust\n     */\n    private async compileDsp(codes: TCompiledCodes, shaKey: string): Promise<TCompiledDsp> {\n        const time1 = performance.now();\n        /*\n        if (typeof Binaryen !== \"undefined\") {\n            try {\n                const binaryenModule = Binaryen.readBinary(codes.dsp.ui8Code);\n                this.log(\"Binaryen based optimisation\");\n                binaryenModule.optimize();\n                // console.log(binaryen_module.emitText());\n                codes.dsp.ui8Code = binaryenModule.emitBinary();\n                binaryenModule.dispose();\n            } catch (e) {\n                this.log(\"Binaryen not available, no optimisation...\");\n            }\n        }\n        */\n        const dspModule = await WebAssembly.compile(codes.dsp.ui8Code);\n        if (!dspModule) {\n            this.error(\"Faust DSP factory cannot be compiled\");\n            throw new Error(\"Faust DSP factory cannot be compiled\");\n        }\n        const time2 = performance.now();\n        this.log(\"WASM compilation duration : \" + (time2 - time1));\n        const compiledDsp: TCompiledDsp = { shaKey, codes, dspModule, dspMeta: undefined }; // Default mode\n        // 'libfaust.js' wasm backend generates UI methods, then we compile the code\n        // eval(helpers_code1);\n        // factory.getJSON = eval(\"getJSON\" + dspName);\n        // factory.getBase64Code = eval(\"getBase64Code\" + dspName);\n        try {\n            const json = codes.dsp.helpersCode.match(/getJSON\\w+?\\(\\)[\\s\\n]*{[\\s\\n]*return[\\s\\n]*'(\\{.+?)';}/)[1].replace(/\\\\'/g, \"'\");\n            // const base64Code = codes.dsp.helpersCode.match(/getBase64Code\\w+?\\(\\)[\\s\\n]*{[\\s\\n]*return[\\s\\n]*\"([A-Za-z0-9+/=]+?)\";[\\s\\n]+}/)[1];\n            const meta = JSON.parse(json);\n            compiledDsp.dspMeta = meta;\n        } catch (e) {\n            this.error(\"Error in JSON.parse: \" + e.message);\n            throw e;\n        }\n        this.dspTable[shaKey] = compiledDsp;\n        // Possibly compile effect\n        if (!codes.effect) return compiledDsp;\n        try {\n            const effectModule = await WebAssembly.compile(codes.effect.ui8Code);\n            compiledDsp.effectModule = effectModule;\n            // 'libfaust.js' wasm backend generates UI methods, then we compile the code\n            // eval(helpers_code2);\n            // factory.getJSONeffect = eval(\"getJSON\" + factory_name2);\n            // factory.getBase64Codeeffect = eval(\"getBase64Code\" + factory_name2);\n            try {\n                const json = codes.effect.helpersCode.match(/getJSON\\w+?\\(\\)[\\s\\n]*{[\\s\\n]*return[\\s\\n]*'(\\{.+?)';}/)[1].replace(/\\\\'/g, \"'\");\n                // const base64Code = codes.effect.helpersCode.match(/getBase64Code\\w+?\\(\\)[\\s\\n]*{[\\s\\n]*return[\\s\\n]*\"([A-Za-z0-9+/=]+?)\";[\\s\\n]+}/)[1];\n                const meta = JSON.parse(json);\n                compiledDsp.effectMeta = meta;\n            } catch (e) {\n                this.error(\"Error in JSON.parse: \" + e.message);\n                throw e;\n            }\n        } catch (e) {\n            return compiledDsp;\n        }\n        return compiledDsp;\n    }\n    /**\n     * Get a ScriptProcessorNode from compiled dsp\n     *\n     * @private\n     * @param {TCompiledDsp} compiledDsp - DSP compiled by libfaust\n     * @param {TAudioNodeOptions} optionsIn\n     * @returns {Promise<FaustScriptProcessorNode>}\n     * @memberof Faust\n     */\n    private async getScriptProcessorNode(optionsIn: TAudioNodeOptions): Promise<FaustScriptProcessorNode> {\n        return new FaustWasmToScriptProcessor(this).getNode(optionsIn);\n    }\n    // deleteDSPInstance() {}\n    /**\n     * Get a AudioWorkletNode from compiled dsp\n     *\n     * @private\n     * @param {TAudioNodeOptions} optionsIn\n     * @returns {Promise<FaustAudioWorkletNode>}\n     * @memberof Faust\n     */\n    private async getAudioWorkletNode(optionsIn: TAudioNodeOptions): Promise<FaustAudioWorkletNode> {\n        const { compiledDsp: compiledDspWithCodes, audioCtx, voices, plotHandler } = optionsIn;\n        const compiledDsp = { ...compiledDspWithCodes };\n        delete compiledDsp.codes;\n        const id = compiledDsp.shaKey + \"_\" + voices;\n        if (this.workletProcessors.indexOf(id) === -1) {\n            const strProcessor = `\nconst remap = ${utils.remap.toString()};\nconst midiToFreq = ${utils.midiToFreq.toString()};\nconst findPath = (${utils.findPathClosure.toString()})();\nconst createWasmImport = ${utils.createWasmImport.toString()};\nconst createWasmMemory = ${utils.createWasmMemory.toString()};\nconst faustData = ${JSON.stringify({\n        id,\n        voices,\n        dspMeta: compiledDsp.dspMeta,\n        effectMeta: compiledDsp.effectMeta\n    })};\n(${FaustAudioWorkletProcessorWrapper.toString()})();\n`;\n            const url = window.URL.createObjectURL(new Blob([strProcessor], { type: \"text/javascript\" }));\n            await audioCtx.audioWorklet.addModule(url);\n            this.workletProcessors.push(id);\n        }\n        return new FaustAudioWorkletNode({ audioCtx, id, voices, compiledDsp, plotHandler, mixer32Module: utils.mixer32Module });\n    }\n    /**\n     * Remove a DSP from registry\n     *\n     * @private\n     * @param {TCompiledDsp} compiledDsp\n     * @memberof Faust\n     */\n    private deleteDsp(compiledDsp: TCompiledDsp): void {\n        // The JS side is cleared\n        delete this.dspTable[compiledDsp.shaKey];\n        // The native C++ is cleared each time (freeWasmCModule has been already called in faust.compile)\n        this.deleteAllWasmCDSPFactories();\n    }\n    /**\n     * Stringify current storaged DSP Table.\n     *\n     * @returns {string}\n     * @memberof Faust\n     */\n    stringifyDspTable(): string {\n        const strTable: { [shaKey: string]: TCompiledStrCodes } = {};\n        for (const key in this.dspTable) {\n            const { codes } = this.dspTable[key];\n            strTable[key] = {\n                dsp: {\n                    strCode: btoa(utils.ab2str(codes.dsp.ui8Code)),\n                    code: codes.dsp.code,\n                    helpersCode: codes.dsp.helpersCode\n                },\n                effect: codes.effect ? {\n                    strCode: btoa(utils.ab2str(codes.effect.ui8Code)),\n                    code: codes.effect.code,\n                    helpersCode: codes.effect.helpersCode\n                } : undefined\n            };\n        }\n        return JSON.stringify(strTable);\n    }\n    /**\n     * parse and store a stringified DSP Table.\n     *\n     * @param {string} str\n     * @memberof Faust\n     */\n    parseDspTable(str: string) {\n        const strTable = JSON.parse(str) as { [shaKey: string]: TCompiledStrCodes };\n        for (const shaKey in strTable) {\n            if (this.dspTable[shaKey]) continue;\n            const strCodes = strTable[shaKey];\n            const compiledCodes: TCompiledCodes = {\n                dsp: {\n                    ui8Code: utils.str2ab(atob(strCodes.dsp.strCode)),\n                    code: strCodes.dsp.code,\n                    helpersCode: strCodes.dsp.helpersCode\n                },\n                effect: strCodes.effect ? {\n                    ui8Code: utils.str2ab(atob(strCodes.effect.strCode)),\n                    code: strCodes.effect.code,\n                    helpersCode: strCodes.effect.helpersCode\n                } : undefined\n            };\n            this.compileDsp(compiledCodes, shaKey).then(dsp => this.dspTable[shaKey] = dsp);\n        }\n    }\n    // deleteDSPWorkletInstance() {}\n    /**\n     * Get an SVG Diagram XML File as string\n     *\n     * @param {string} code faust source code\n     * @param {TFaustCompileArgs} args - Paramaters to be given to the Faust compiler\n     * @returns {string} svg file as string\n     * @memberof Faust\n     */\n    getDiagram(code: string, args?: TFaustCompileArgs): string {\n        const codeSize = this.libFaust.lengthBytesUTF8(code) + 1;\n        const $code = this.libFaust._malloc(codeSize);\n        const name = \"FaustDSP\";\n        const nameSize = this.libFaust.lengthBytesUTF8(name) + 1;\n        const $name = this.libFaust._malloc(nameSize);\n        const $errorMsg = this.libFaust._malloc(4096);\n\n        this.libFaust.stringToUTF8(name, $name, nameSize);\n        this.libFaust.stringToUTF8(code, $code, codeSize);\n        const argvIn = args ? utils.toArgv(args) : [];\n        const argv = [...argvIn, \"-lang\", \"wast\", \"-o\", \"/dev/null\", \"-svg\"];\n\n        // Prepare 'argv' array for C side\n        const ptrSize = 4;\n        const $argv = this.libFaust._malloc(argv.length * ptrSize); // Get buffer from emscripten.\n        let argvBuffer$ = new Int32Array(this.libFaust.HEAP32.buffer, $argv, argv.length); // Get a integer view on the newly allocated buffer.\n        for (let i = 0; i < argv.length; i++) {\n            const size$arg = this.libFaust.lengthBytesUTF8(argv[i]) + 1;\n            const $arg = this.libFaust._malloc(size$arg);\n            this.libFaust.stringToUTF8(argv[i], $arg, size$arg);\n            argvBuffer$[i] = $arg;\n        }\n        try {\n            this.generateCAuxFilesFromString($name, $code, argv.length, $argv, $errorMsg);\n            // Free strings\n            this.libFaust._free($code);\n            this.libFaust._free($name);\n            this.libFaust._free($errorMsg);\n            // Get an updated integer view on the newly allocated buffer after possible emscripten memory grow\n            argvBuffer$ = new Int32Array(this.libFaust.HEAP32.buffer, $argv, argv.length);\n            // Free 'argv' C side array\n            for (let i = 0; i < argv.length; i++) {\n                this.libFaust._free(argvBuffer$[i]);\n            }\n            this.libFaust._free($argv);\n        } catch (e) {\n            // libfaust is compiled without C++ exception activated, so a JS exception is throwed and catched here\n            const errorMsg = this.libFaust.UTF8ToString(this.getErrorAfterException());\n            this.cleanupAfterException();\n            // Report the Emscripten error\n            throw errorMsg ? new Error(errorMsg) : e;\n        }\n        return this.libFaust.FS.readFile(\"FaustDSP-svg/process.svg\", { encoding: \"utf8\" }) as string;\n    }\n    /**\n     * Expose LibFaust Emscripten Module File System\n     *\n     * @param {string} path path string\n     * @returns {Emscripten.FS} Emscripten Module File System\n     * @memberof Faust\n     */\n    get fs() {\n        return this.libFaust.FS;\n    }\n    log(...args: any[]) {\n        if (this.debug) console.log(...args);\n        const msg = args.length === 1 && typeof args[0] === \"string\" ? args[0] : JSON.stringify(args.length !== 1 ? args : args[0]);\n        this._log.push(msg);\n        if (typeof this.logHandler === \"function\") this.logHandler(msg, 0);\n    }\n    error(...args: any[]) {\n        console.error(...args);\n        const msg = args.length === 1 && typeof args[0] === \"string\" ? args[0] : JSON.stringify(args.length !== 1 ? args : args[0]);\n        this._log.push(msg);\n        if (typeof this.logHandler === \"function\") this.logHandler(msg, 1);\n    }\n    logHandler: (msg: string, errorLevel: 1 | 0) => any;\n}\n","/* eslint-disable object-curly-newline */\n/* eslint-disable object-property-newline */\nimport { TDspMeta, TCompiledDsp, TFaustUI, TFaustUIGroup, TFaustUIItem } from \"./types\";\nimport { remap } from \"./utils\";\n\nexport class FaustAudioWorkletNode extends (window.AudioWorkletNode ? AudioWorkletNode : null) {\n    onprocessorerror = (e: ErrorEvent) => {\n        console.error(\"Error from \" + this.dspMeta.name + \" AudioWorkletNode: \"); // eslint-disable-line no-console\n        throw e.error;\n    }\n    /* WAP ??\n    getMetadata = this.getJSON;\n    setParam = this.setParamValue;\n    getParam = this.getParamValue;\n    inputChannelCount = this.getNumInputs;\n    outputChannelCount = this.getNumOutputs;\n    getParams = () => this.inputsItems;\n    getDescriptor = this.getParams;\n    onMidi = this.midiMessage;\n    getState = async () => {\n        const params = {} as { [key: string]: string };\n        this.getDescriptor().forEach(key => params[key] = JSON.stringify(this.getParam(key)));\n        return params;\n    }\n    setState = async (state: { [key: string]: number; }) => {\n        for (const key in state) {\n            this.setParam(key, state[key]);\n        }\n        try {\n            this.gui.setAttribute(\"state\", JSON.stringify(state));\n        } catch (error) {\n            console.warn(\"Plugin without gui or GUI not defined: \", error);\n        }\n        return state;\n    }\n    setPatch = (patch: any) => this.presets ? this.setState(this.presets[patch]) : undefined; // ??\n    metadata = (handler: (...args: any[]) => any) => handler(null);\n    gui: any;\n    presets: any;\n    */\n\n    voices?: number;\n    dspMeta: TDspMeta;\n    effectMeta: TDspMeta;\n    outputHandler: (address: string, value: number) => any;\n    inputsItems: string[];\n    outputsItems: string[];\n\n    fPitchwheelLabel: { path: string; min: number; max: number }[];\n    fCtrlLabel: { path: string; min: number; max: number }[][];\n\n    plotHandler: (plotted: Float32Array[], index: number, events?: { type: string; data: any }[]) => any;\n\n    constructor(options: { audioCtx: AudioContext; id: string; compiledDsp: TCompiledDsp; voices?: number; plotHandler?: (plotted: Float32Array[], index: number, events?: { type: string; data: any }[]) => any; mixer32Module: WebAssembly.Module }) {\n        super(options.audioCtx, options.id, {\n            numberOfInputs: options.compiledDsp.dspMeta.inputs > 0 ? 1 : 0,\n            numberOfOutputs: options.compiledDsp.dspMeta.outputs > 0 ? 1 : 0,\n            channelCount: Math.max(1, options.compiledDsp.dspMeta.inputs),\n            outputChannelCount: [options.compiledDsp.dspMeta.outputs],\n            channelCountMode: \"explicit\",\n            channelInterpretation: \"speakers\",\n            processorOptions: { id: options.id, voices: options.voices, compiledDsp: options.compiledDsp, mixer32Module: options.mixer32Module }\n        });\n        // Patch it with additional functions\n        this.port.onmessage = (e: MessageEvent) => {\n            if (e.data.type === \"param\" && this.outputHandler) {\n                this.outputHandler(e.data.path, e.data.value);\n            } else if (e.data.type === \"plot\") {\n                if (this.plotHandler) this.plotHandler(e.data.value, e.data.index, e.data.events);\n            }\n        };\n        this.voices = options.voices;\n        this.dspMeta = options.compiledDsp.dspMeta;\n        this.effectMeta = options.compiledDsp.effectMeta;\n        this.outputHandler = null;\n        this.inputsItems = [];\n        this.outputsItems = [];\n        this.fPitchwheelLabel = [];\n        this.fCtrlLabel = new Array(128).fill(null).map(() => []);\n        this.plotHandler = options.plotHandler;\n        this.parseUI(this.dspMeta.ui);\n        if (this.effectMeta) this.parseUI(this.effectMeta.ui);\n        try {\n            if (this.parameters) this.parameters.forEach(p => p.automationRate = \"k-rate\");\n        } catch (e) {} // eslint-disable-line no-empty\n    }\n    parseUI(ui: TFaustUI) {\n        ui.forEach(group => this.parseGroup(group));\n    }\n    parseGroup(group: TFaustUIGroup) {\n        if (group.items) this.parseItems(group.items);\n    }\n    parseItems(items: TFaustUIItem[]) {\n        items.forEach(item => this.parseItem(item));\n    }\n    parseItem(item: TFaustUIItem) {\n        if (item.type === \"vgroup\" || item.type === \"hgroup\" || item.type === \"tgroup\") {\n            this.parseItems(item.items);\n        } else if (item.type === \"hbargraph\" || item.type === \"vbargraph\") {\n            // Keep bargraph adresses\n            this.outputsItems.push(item.address);\n        } else if (item.type === \"vslider\" || item.type === \"hslider\" || item.type === \"button\" || item.type === \"checkbox\" || item.type === \"nentry\") {\n            // Keep inputs adresses\n            this.inputsItems.push(item.address);\n            if (!item.meta) return;\n            item.meta.forEach((meta) => {\n                const { midi } = meta;\n                if (!midi) return;\n                const strMidi = midi.trim();\n                if (strMidi === \"pitchwheel\") {\n                    this.fPitchwheelLabel.push({ path: item.address, min: item.min, max: item.max });\n                } else {\n                    const matched = strMidi.match(/^ctrl\\s(\\d+)/);\n                    if (!matched) return;\n                    this.fCtrlLabel[parseInt(matched[1])].push({ path: item.address, min: item.min, max: item.max });\n                }\n            });\n        }\n    }\n\n    /**\n     * Instantiates a new polyphonic voice.\n     *\n     * @param {number} channel - the MIDI channel (0..15, not used for now)\n     * @param {number} pitch - the MIDI pitch (0..127)\n     * @param {number} velocity - the MIDI velocity (0..127)\n     * @memberof FaustAudioWorkletNode\n     */\n    keyOn(channel: number, pitch: number, velocity: number) {\n        const e = { type: \"keyOn\", data: [channel, pitch, velocity] };\n        this.port.postMessage(e);\n    }\n    /**\n     * De-instantiates a polyphonic voice.\n     *\n     * @param {number} channel - the MIDI channel (0..15, not used for now)\n     * @param {number} pitch - the MIDI pitch (0..127)\n     * @param {number} velocity - the MIDI velocity (0..127)\n     * @memberof FaustAudioWorkletNode\n     */\n    keyOff(channel: number, pitch: number, velocity: number) {\n        const e = { type: \"keyOff\", data: [channel, pitch, velocity] };\n        this.port.postMessage(e);\n    }\n    /**\n     * Gently terminates all the active voices.\n     *\n     * @memberof FaustAudioWorkletNode\n     */\n    allNotesOff() {\n        const e = { type: \"ctrlChange\", data: [0, 123, 0] };\n        this.port.postMessage(e);\n    }\n    ctrlChange(channel: number, ctrlIn: number, valueIn: any) {\n        const e = { type: \"ctrlChange\", data: [channel, ctrlIn, valueIn] };\n        this.port.postMessage(e);\n        if (!this.fCtrlLabel[ctrlIn].length) return;\n        this.fCtrlLabel[ctrlIn].forEach((ctrl) => {\n            const { path } = ctrl;\n            const value = remap(valueIn, 0, 127, ctrl.min, ctrl.max);\n            const param = this.parameters.get(path);\n            if (param) param.setValueAtTime(value, this.context.currentTime);\n        });\n    }\n    pitchWheel(channel: number, wheel: number) {\n        const e = { type: \"pitchWheel\", data: [channel, wheel] };\n        this.port.postMessage(e);\n        this.fPitchwheelLabel.forEach((pw) => {\n            const { path } = pw;\n            const value = remap(wheel, 0, 16383, pw.min, pw.max);\n            const param = this.parameters.get(path);\n            if (param) param.setValueAtTime(value, this.context.currentTime);\n        });\n    }\n    midiMessage(data: number[] | Uint8Array) {\n        const cmd = data[0] >> 4;\n        const channel = data[0] & 0xf;\n        const data1 = data[1];\n        const data2 = data[2];\n        if (channel === 9) return;\n        if (cmd === 8 || (cmd === 9 && data2 === 0)) this.keyOff(channel, data1, data2);\n        else if (cmd === 9) this.keyOn(channel, data1, data2);\n        else if (cmd === 11) this.ctrlChange(channel, data1, data2);\n        else if (cmd === 14) this.pitchWheel(channel, data2 * 128.0 + data1);\n        else this.port.postMessage({ data, type: \"midi\" });\n    }\n    metadata() {}\n    setParamValue(path: string, value: number) {\n        const e = { type: \"param\", data: { path, value } };\n        this.port.postMessage(e);\n        const param = this.parameters.get(path);\n        if (param) param.setValueAtTime(value, this.context.currentTime);\n    }\n    getParamValue(path: string) {\n        const param = this.parameters.get(path);\n        if (param) return param.value;\n        return null;\n    }\n    setOutputParamHandler(handler: (address: string, value: number) => any) {\n        this.outputHandler = handler;\n    }\n    getOutputParamHandler() {\n        return this.outputHandler;\n    }\n    getNumInputs() {\n        return this.dspMeta.inputs;\n    }\n    getNumOutputs() {\n        return this.dspMeta.outputs;\n    }\n    getParams() {\n        return this.inputsItems;\n    }\n    getJSON() {\n        if (this.voices) {\n            const o = this.dspMeta;\n            const e = this.effectMeta;\n            const r = { ...o };\n            if (e) {\n                r.ui = [{ type: \"tgroup\", label: \"Sequencer\", items: [\n                    { type: \"vgroup\", label: \"Instrument\", items: o.ui },\n                    { type: \"vgroup\", label: \"Effect\", items: e.ui }\n                ] }];\n            } else {\n                r.ui = [{ type: \"tgroup\", label: \"Polyphonic\", items: [\n                    { type: \"vgroup\", label: \"Voices\", items: o.ui }\n                ] }];\n            }\n            return JSON.stringify(r);\n        }\n        return JSON.stringify(this.dspMeta);\n    }\n    getUI() {\n        if (this.voices) {\n            const o = this.dspMeta;\n            const e = this.effectMeta;\n            if (e) {\n                return [{ type: \"tgroup\", label: \"Sequencer\", items: [\n                    { type: \"vgroup\", label: \"Instrument\", items: o.ui },\n                    { type: \"vgroup\", label: \"Effect\", items: e.ui }\n                ] }];\n            }\n            return [{ type: \"tgroup\", label: \"Polyphonic\", items: [\n                { type: \"vgroup\", label: \"Voices\", items: o.ui }\n            ] }];\n        }\n        return this.dspMeta.ui;\n    }\n    destroy() {\n        this.port.postMessage({ type: \"destroy\" });\n        this.port.close();\n        delete this.plotHandler;\n        delete this.outputHandler;\n    }\n}\n","/* eslint-disable no-console */\n/* eslint-disable no-restricted-properties */\n/* eslint-disable @typescript-eslint/camelcase */\n/* eslint-disable object-property-newline */\n/* eslint-env worker */\nimport { TDspMeta, FaustDspNode, TFaustUI, TFaustUIGroup, TFaustUIItem, FaustWebAssemblyExports, FaustWebAssemblyMixerExports, TCompiledDsp } from \"./types\";\n\n// AudioWorklet Globals\ndeclare class AudioWorkletProcessor {\n    public port: MessagePort;\n    public process(inputs: Float32Array[][], outputs: Float32Array[][], parameters: { [key: string]: Float32Array }): boolean;\n    constructor(options: AudioWorkletNodeOptions);\n}\ntype AudioWorkletProcessorConstructor<T extends AudioWorkletProcessor> = {\n    new (options: AudioWorkletNodeOptions): T;\n};\ndeclare function registerProcessor<T extends AudioWorkletProcessor>(name: string, constructor: AudioWorkletProcessorConstructor<T>): void;\ndeclare const currentFrame: number;\ndeclare const currentTime: number;\ndeclare const sampleRate: number;\ninterface AudioParamDescriptor {\n    automationRate?: AutomationRate;\n    defaultValue?: number;\n    maxValue?: number;\n    minValue?: number;\n    name: string;\n}\n\n// Injected by Faust\ntype FaustData = {\n    id: string;\n    voices: number;\n    dspMeta: TDspMeta;\n    effectMeta?: TDspMeta;\n};\ndeclare const faustData: FaustData;\n\ndeclare const remap: (v: number, mn0: number, mx0: number, mn1: number, mx1: number) => number;\ndeclare const midiToFreq: (v: number) => number;\ndeclare const findPath: (o: any, p: string) => boolean;\ndeclare const createWasmImport: (voices: number, memory: WebAssembly.Memory) => { [key: string]: any };\ndeclare const createWasmMemory: (voicesIn: number, dspMeta: TDspMeta, effectMeta: TDspMeta, bufferSize: number) => WebAssembly.Memory;\n\nexport const FaustAudioWorkletProcessorWrapper = () => {\n    class FaustConst {\n        static id = faustData.id;\n        static dspMeta = faustData.dspMeta;\n        static effectMeta = faustData.effectMeta;\n    }\n    class FaustAudioWorkletProcessor extends AudioWorkletProcessor implements FaustDspNode {\n        static bufferSize = 128;\n        // JSON parsing functions\n        static parseUI(ui: TFaustUI, obj: AudioParamDescriptor[] | FaustAudioWorkletProcessor, callback: (...args: any[]) => any) {\n            for (let i = 0; i < ui.length; i++) {\n                this.parseGroup(ui[i], obj, callback);\n            }\n        }\n        static parseGroup(group: TFaustUIGroup, obj: AudioParamDescriptor[] | FaustAudioWorkletProcessor, callback: (...args: any[]) => any) {\n            if (group.items) {\n                this.parseItems(group.items, obj, callback);\n            }\n        }\n        static parseItems(items: TFaustUIItem[], obj: AudioParamDescriptor[] | FaustAudioWorkletProcessor, callback: (...args: any[]) => any) {\n            for (let i = 0; i < items.length; i++) {\n                callback(items[i], obj, callback);\n            }\n        }\n        static parseItem(item: TFaustUIItem, obj: AudioParamDescriptor[], callback: (...args: any[]) => any) {\n            if (item.type === \"vgroup\" || item.type === \"hgroup\" || item.type === \"tgroup\") {\n                FaustAudioWorkletProcessor.parseItems(item.items, obj, callback); // callback may not binded to this\n            } else if (item.type === \"hbargraph\" || item.type === \"vbargraph\") {\n                // Nothing\n            } else if (item.type === \"vslider\" || item.type === \"hslider\" || item.type === \"nentry\") {\n                if (!faustData.voices || (!item.address.endsWith(\"/gate\") && !item.address.endsWith(\"/freq\") && !item.address.endsWith(\"/gain\"))) {\n                    obj.push({ name: item.address, defaultValue: item.init || 0, minValue: item.min || 0, maxValue: item.max || 0 });\n                }\n            } else if (item.type === \"button\" || item.type === \"checkbox\") {\n                if (!faustData.voices || (!item.address.endsWith(\"/gate\") && !item.address.endsWith(\"/freq\") && !item.address.endsWith(\"/gain\"))) {\n                    obj.push({ name: item.address, defaultValue: item.init || 0, minValue: 0, maxValue: 1 });\n                }\n            }\n        }\n        static parseItem2(item: TFaustUIItem, obj: FaustAudioWorkletProcessor, callback: (...args: any[]) => any) {\n            if (item.type === \"vgroup\" || item.type === \"hgroup\" || item.type === \"tgroup\") {\n                FaustAudioWorkletProcessor.parseItems(item.items, obj, callback); // callback may not binded to this\n            } else if (item.type === \"hbargraph\" || item.type === \"vbargraph\") {\n                // Keep bargraph adresses\n                obj.outputsItems.push(item.address);\n                obj.pathTable$[item.address] = item.index;\n            } else if (item.type === \"vslider\" || item.type === \"hslider\" || item.type === \"button\" || item.type === \"checkbox\" || item.type === \"nentry\") {\n                // Keep inputs adresses\n                obj.inputsItems.push(item.address);\n                obj.pathTable$[item.address] = item.index;\n                if (!item.meta) return;\n                item.meta.forEach((meta) => {\n                    const { midi } = meta;\n                    if (!midi) return;\n                    const strMidi = midi.trim();\n                    if (strMidi === \"pitchwheel\") {\n                        obj.fPitchwheelLabel.push({ path: item.address, min: item.min, max: item.max });\n                    } else {\n                        const matched = strMidi.match(/^ctrl\\s(\\d+)/);\n                        if (!matched) return;\n                        obj.fCtrlLabel[parseInt(matched[1])].push({ path: item.address, min: item.min, max: item.max });\n                    }\n                });\n            }\n        }\n        static get parameterDescriptors() {\n            // Analyse JSON to generate AudioParam parameters\n            const params = [] as AudioParamDescriptor[];\n            this.parseUI(FaustConst.dspMeta.ui, params, this.parseItem);\n            if (FaustConst.effectMeta) this.parseUI(FaustConst.effectMeta.ui, params, this.parseItem);\n            return params;\n        }\n        destroyed: boolean;\n        dspInstance: WebAssembly.Instance;\n        effectInstance?: WebAssembly.Instance;\n        mixerInstance?: WebAssembly.Instance;\n        memory?: WebAssembly.Memory;\n\n        bufferSize: number;\n        voices: number;\n        dspMeta: TDspMeta;\n        $ins: number;\n        $outs: number;\n        dspInChannnels: Float32Array[];\n        dspOutChannnels: Float32Array[];\n        fPitchwheelLabel: { path: string; min: number; max: number }[];\n        fCtrlLabel: { path: string; min: number; max: number }[][];\n        numIn: number;\n        numOut: number;\n        ptrSize: number;\n        sampleSize: number;\n        outputsTimer: number;\n        inputsItems: string[];\n        outputsItems: string[];\n        pathTable$: { [address: string]: number };\n        $audioHeap: number;\n        $$audioHeapInputs: number;\n        $$audioHeapOutputs: number;\n        $audioHeapInputs: number;\n        $audioHeapOutputs: number;\n        $dsp: number;\n        factory: FaustWebAssemblyExports;\n        HEAP: ArrayBuffer;\n        HEAP32: Int32Array;\n        HEAPF32: Float32Array;\n\n        effectMeta?: TDspMeta;\n        $effect?: number;\n        $mixing?: number;\n        fFreqLabel$?: number[];\n        fGateLabel$?: number[];\n        fGainLabel$?: number[];\n        fDate?: number;\n        $$audioHeapMixing?: number;\n        $audioHeapMixing?: number;\n        mixer?: FaustWebAssemblyMixerExports;\n        effect?: FaustWebAssemblyExports;\n        dspVoices$?: number[];\n        dspVoicesState?: number[];\n        dspVoicesLevel?: number[];\n        dspVoicesDate?: number[];\n        kActiveVoice?: number;\n        kFreeVoice?: number;\n        kReleaseVoice?: number;\n        kNoVoice?: number;\n\n        $buffer: number;\n        cachedEvents: { type: string; data: any }[];\n\n        outputHandler: (address: string, value: number) => any;\n        computeHandler: (bufferSize: number) => any;\n\n        handleMessage = (e: MessageEvent) => { // use arrow function for binding\n            const msg = e.data;\n            this.cachedEvents.push({ type: e.data.type, data: e.data.data });\n            switch (msg.type) {\n                // Generic MIDI message\n                case \"midi\": this.midiMessage(msg.data); break;\n                // Typed MIDI message\n                case \"keyOn\": this.keyOn(msg.data[0], msg.data[1], msg.data[2]); break;\n                case \"keyOff\": this.keyOff(msg.data[0], msg.data[1], msg.data[2]); break;\n                case \"ctrlChange\": this.ctrlChange(msg.data[0], msg.data[1], msg.data[2]); break;\n                case \"pitchWheel\": this.pitchWheel(msg.data[0], msg.data[1]); break;\n                // Generic data message\n                case \"param\": this.setParamValue(msg.data.path, msg.data.value); break;\n                // case \"patch\": this.onpatch(msg.data); break;\n                case \"destroy\": {\n                    this.port.close();\n                    this.destroyed = true;\n                    delete this.outputHandler;\n                    delete this.computeHandler;\n                    break;\n                }\n                default:\n            }\n        }\n        constructor(options: AudioWorkletNodeOptions) {\n            super(options);\n            const processorOptions: { id: string; voices: number; compiledDsp: TCompiledDsp; mixer32Module: WebAssembly.Module } = options.processorOptions;\n            this.instantiateWasm(processorOptions);\n            this.port.onmessage = this.handleMessage; // Naturally binded with arrow function property\n            this.destroyed = false;\n\n            this.bufferSize = 128;\n            this.voices = processorOptions.voices;\n            this.dspMeta = processorOptions.compiledDsp.dspMeta;\n\n            this.outputHandler = (path, value) => this.port.postMessage({ path, value, type: \"param\" });\n            this.computeHandler = null;\n\n            this.$ins = null;\n            this.$outs = null;\n\n            this.dspInChannnels = [];\n            this.dspOutChannnels = [];\n\n            this.fPitchwheelLabel = [];\n            this.fCtrlLabel = new Array(128).fill(null).map(() => []);\n\n            this.numIn = this.dspMeta.inputs;\n            this.numOut = this.dspMeta.outputs;\n\n            // Memory allocator\n            this.ptrSize = 4;\n            this.sampleSize = 4;\n\n            // Create the WASM instance\n            this.factory = this.dspInstance.exports as FaustWebAssemblyExports;\n            this.HEAP = this.voices ? this.memory.buffer : this.factory.memory.buffer;\n            this.HEAP32 = new Int32Array(this.HEAP);\n            this.HEAPF32 = new Float32Array(this.HEAP);\n\n            // console.log(this.HEAP);\n            // console.log(this.HEAP32);\n            // console.log(this.HEAPF32);\n\n            // bargraph\n            this.outputsTimer = 5;\n            this.outputsItems = [];\n\n            // input items\n            this.inputsItems = [];\n\n            // Start of HEAP index\n\n            // DSP is placed first with index 0. Audio buffer start at the end of DSP.\n            this.$audioHeap = this.voices ? 0 : this.dspMeta.size;\n\n            // Setup pointers offset\n            this.$$audioHeapInputs = this.$audioHeap;\n            this.$$audioHeapOutputs = this.$$audioHeapInputs + this.numIn * this.ptrSize;\n\n            // Setup buffer offset\n            this.$audioHeapInputs = this.$$audioHeapOutputs + (this.numOut * this.ptrSize);\n            this.$audioHeapOutputs = this.$audioHeapInputs + (this.numIn * this.bufferSize * this.sampleSize);\n            if (this.voices) {\n                this.$$audioHeapMixing = this.$$audioHeapOutputs + this.numOut * this.ptrSize;\n                // Setup buffer offset\n                this.$audioHeapInputs = this.$$audioHeapMixing + this.numOut * this.ptrSize;\n                this.$audioHeapOutputs = this.$audioHeapInputs + this.numIn * this.bufferSize * this.sampleSize;\n                this.$audioHeapMixing = this.$audioHeapOutputs + this.numOut * this.bufferSize * this.sampleSize;\n                this.$dsp = this.$audioHeapMixing + this.numOut * this.bufferSize * this.sampleSize;\n            } else {\n                this.$audioHeapInputs = this.$$audioHeapOutputs + this.numOut * this.ptrSize;\n                this.$audioHeapOutputs = this.$audioHeapInputs + this.numIn * this.bufferSize * this.sampleSize;\n                // Start of DSP memory : Mono DSP is placed first with index 0\n                this.$dsp = 0;\n            }\n\n            if (this.voices) {\n                this.effectMeta = FaustConst.effectMeta;\n                this.$mixing = null;\n                this.fFreqLabel$ = [];\n                this.fGateLabel$ = [];\n                this.fGainLabel$ = [];\n                this.fDate = 0;\n\n                this.mixer = this.mixerInstance.exports as FaustWebAssemblyMixerExports;\n                this.effect = this.effectInstance ? this.effectInstance.exports as FaustWebAssemblyExports : null;\n\n                // Start of DSP memory ('polyphony' DSP voices)\n                this.dspVoices$ = [];\n                this.dspVoicesState = [];\n                this.dspVoicesLevel = [];\n                this.dspVoicesDate = [];\n\n                this.kActiveVoice = 0;\n                this.kFreeVoice = -1;\n                this.kReleaseVoice = -2;\n                this.kNoVoice = -3;\n\n                for (let i = 0; i < this.voices; i++) {\n                    this.dspVoices$[i] = this.$dsp + i * this.dspMeta.size;\n                    this.dspVoicesState[i] = this.kFreeVoice;\n                    this.dspVoicesLevel[i] = 0;\n                    this.dspVoicesDate[i] = 0;\n                }\n                // Effect memory starts after last voice\n                this.$effect = this.dspVoices$[this.voices - 1] + this.dspMeta.size;\n            }\n\n            this.pathTable$ = {};\n\n            this.$buffer = 0;\n            this.cachedEvents = [];\n\n            // Init resulting DSP\n            this.setup();\n        }\n        instantiateWasm(options: { id: string; voices: number; compiledDsp: TCompiledDsp; mixer32Module: WebAssembly.Module }) {\n            const memory = createWasmMemory(options.voices, options.compiledDsp.dspMeta, options.compiledDsp.effectMeta, 128);\n            this.memory = memory;\n            const imports = createWasmImport(options.voices, memory);\n            this.dspInstance = new WebAssembly.Instance(options.compiledDsp.dspModule, imports);\n            if (options.compiledDsp.effectModule) {\n                this.effectInstance = new WebAssembly.Instance(options.compiledDsp.effectModule, imports);\n            }\n            if (options.voices) {\n                const mixerImports = { imports: { print: console.log }, memory: { memory } };\n                this.mixerInstance = new WebAssembly.Instance(options.mixer32Module, mixerImports);\n            }\n        }\n        updateOutputs() {\n            if (this.outputsItems.length > 0 && this.outputHandler && this.outputsTimer-- === 0) {\n                this.outputsTimer = 5;\n                this.outputsItems.forEach(item => this.outputHandler(item, this.factory.getParamValue(this.$dsp, this.pathTable$[item])));\n            }\n        }\n\n        parseUI(ui: TFaustUI) {\n            return FaustAudioWorkletProcessor.parseUI(ui, this, FaustAudioWorkletProcessor.parseItem2);\n        }\n        parseGroup(group: TFaustUIGroup) {\n            return FaustAudioWorkletProcessor.parseGroup(group, this, FaustAudioWorkletProcessor.parseItem2);\n        }\n        parseItems(items: TFaustUIItem[]) {\n            return FaustAudioWorkletProcessor.parseItems(items, this, FaustAudioWorkletProcessor.parseItem2);\n        }\n        parseItem(item: TFaustUIItem) {\n            return FaustAudioWorkletProcessor.parseItem2(item, this, FaustAudioWorkletProcessor.parseItem2);\n        }\n\n        setParamValue(path: string, val: number) {\n            if (this.voices) {\n                if (this.effect && findPath(this.effectMeta.ui, path)) this.effect.setParamValue(this.$effect, this.pathTable$[path], val);\n                else this.dspVoices$.forEach($voice => this.factory.setParamValue($voice, this.pathTable$[path], val));\n            } else {\n                this.factory.setParamValue(this.$dsp, this.pathTable$[path], val);\n            }\n        }\n        getParamValue(path: string) {\n            if (this.voices) {\n                if (this.effect && findPath(this.effectMeta.ui, path)) return this.effect.getParamValue(this.$effect, this.pathTable$[path]);\n                return this.factory.getParamValue(this.dspVoices$[0], this.pathTable$[path]);\n            }\n            return this.factory.getParamValue(this.$dsp, this.pathTable$[path]);\n        }\n        setup() {\n            if (this.numIn > 0) {\n                this.$ins = this.$$audioHeapInputs;\n                for (let i = 0; i < this.numIn; i++) {\n                    this.HEAP32[(this.$ins >> 2) + i] = this.$audioHeapInputs + this.bufferSize * this.sampleSize * i;\n                }\n                // Prepare Ins buffer tables\n                const dspInChans = this.HEAP32.subarray(this.$ins >> 2, (this.$ins + this.numIn * this.ptrSize) >> 2);\n                for (let i = 0; i < this.numIn; i++) {\n                    this.dspInChannnels[i] = this.HEAPF32.subarray(dspInChans[i] >> 2, (dspInChans[i] + this.bufferSize * this.sampleSize) >> 2);\n                }\n            }\n            if (this.numOut > 0) {\n                this.$outs = this.$$audioHeapOutputs;\n                if (this.voices) this.$mixing = this.$$audioHeapMixing;\n                for (let i = 0; i < this.numOut; i++) {\n                    this.HEAP32[(this.$outs >> 2) + i] = this.$audioHeapOutputs + this.bufferSize * this.sampleSize * i;\n                    if (this.voices) this.HEAP32[(this.$mixing >> 2) + i] = this.$audioHeapMixing + this.bufferSize * this.sampleSize * i;\n                }\n                // Prepare Out buffer tables\n                const dspOutChans = this.HEAP32.subarray(this.$outs >> 2, (this.$outs + this.numOut * this.ptrSize) >> 2);\n                for (let i = 0; i < this.numOut; i++) {\n                    this.dspOutChannnels[i] = this.HEAPF32.subarray(dspOutChans[i] >> 2, (dspOutChans[i] + this.bufferSize * this.sampleSize) >> 2);\n                }\n            }\n            // Parse UI\n            this.parseUI(this.dspMeta.ui);\n            if (this.effect) this.parseUI(this.effectMeta.ui);\n\n            // keep 'keyOn/keyOff' labels\n            if (this.voices) {\n                this.inputsItems.forEach((item) => {\n                    if (item.endsWith(\"/gate\")) this.fGateLabel$.push(this.pathTable$[item]);\n                    else if (item.endsWith(\"/freq\")) this.fFreqLabel$.push(this.pathTable$[item]);\n                    else if (item.endsWith(\"/gain\")) this.fGainLabel$.push(this.pathTable$[item]);\n                });\n                // Init DSP voices\n                this.dspVoices$.forEach($voice => this.factory.init($voice, sampleRate));\n                // Init effect\n                if (this.effect) this.effect.init(this.$effect, sampleRate);\n            } else {\n                // Init DSP\n                this.factory.init(this.$dsp, sampleRate); // 'sampleRate' is defined in AudioWorkletGlobalScope\n            }\n        }\n        // Poly only methods\n        getPlayingVoice(pitch: number) {\n            if (!this.voices) return null;\n            let voice = this.kNoVoice;\n            let oldestDatePlaying = Number.MAX_VALUE;\n            for (let i = 0; i < this.voices; i++) {\n                if (this.dspVoicesState[i] === pitch) {\n                    // Keeps oldest playing voice\n                    if (this.dspVoicesDate[i] < oldestDatePlaying) {\n                        oldestDatePlaying = this.dspVoicesDate[i];\n                        voice = i;\n                    }\n                }\n            }\n            return voice;\n        }\n        allocVoice(voice: number) {\n            if (!this.voices) return null;\n            // so that envelop is always re-initialized\n            this.factory.instanceClear(this.dspVoices$[voice]);\n            this.dspVoicesDate[voice] = this.fDate++;\n            this.dspVoicesState[voice] = this.kActiveVoice;\n            return voice;\n        }\n        getFreeVoice() {\n            if (!this.voices) return null;\n            for (let i = 0; i < this.voices; i++) {\n                if (this.dspVoicesState[i] === this.kFreeVoice) return this.allocVoice(i);\n            }\n            let voiceRelease = this.kNoVoice;\n            let voicePlaying = this.kNoVoice;\n            let oldestDateRelease = Number.MAX_VALUE;\n            let oldestDatePlaying = Number.MAX_VALUE;\n            for (let i = 0; i < this.voices; i++) { // Scan all voices\n                // Try to steal a voice in kReleaseVoice mode...\n                if (this.dspVoicesState[i] === this.kReleaseVoice) {\n                    // Keeps oldest release voice\n                    if (this.dspVoicesDate[i] < oldestDateRelease) {\n                        oldestDateRelease = this.dspVoicesDate[i];\n                        voiceRelease = i;\n                    }\n                } else if (this.dspVoicesDate[i] < oldestDatePlaying) {\n                    oldestDatePlaying = this.dspVoicesDate[i];\n                    voicePlaying = i;\n                }\n            }\n            // Then decide which one to steal\n            if (oldestDateRelease !== Number.MAX_VALUE) {\n                // console.log(`Steal release voice : voice_date = ${this.dspVoicesDate[voiceRelease]} cur_date = ${this.fDate} voice = ${voiceRelease}`);\n                return this.allocVoice(voiceRelease);\n            }\n            if (oldestDatePlaying !== Number.MAX_VALUE) {\n                // console.log(`Steal playing voice : voice_date = ${this.dspVoicesDate[voicePlaying]} cur_date = ${this.fDate} voice = ${voicePlaying}`);\n                return this.allocVoice(voicePlaying);\n            }\n            return this.kNoVoice;\n        }\n        keyOn(channel: number, pitch: number, velocity: number) {\n            if (!this.voices) return;\n            const voice = this.getFreeVoice();\n            // console.log(\"keyOn voice \" + voice);\n            this.fFreqLabel$.forEach($ => this.factory.setParamValue(this.dspVoices$[voice], $, midiToFreq(pitch)));\n            this.fGateLabel$.forEach($ => this.factory.setParamValue(this.dspVoices$[voice], $, 1));\n            this.fGainLabel$.forEach($ => this.factory.setParamValue(this.dspVoices$[voice], $, velocity / 127));\n            this.dspVoicesState[voice] = pitch;\n        }\n        keyOff(channel: number, pitch: number, velocity: number) {\n            if (!this.voices) return;\n            const voice = this.getPlayingVoice(pitch);\n            if (voice === this.kNoVoice) return; // console.log(\"Playing voice not found...\");\n            // console.log(\"keyOff voice \" + voice);\n            this.fGateLabel$.forEach($ => this.factory.setParamValue(this.dspVoices$[voice], $, 0)); // No use of velocity for now...\n            this.dspVoicesState[voice] = this.kReleaseVoice; // Release voice\n        }\n        allNotesOff() {\n            if (!this.voices) return;\n            for (let i = 0; i < this.voices; i++) {\n                this.fGateLabel$.forEach($gate => this.factory.setParamValue(this.dspVoices$[i], $gate, 0));\n                this.dspVoicesState[i] = this.kReleaseVoice;\n            }\n        }\n\n        midiMessage(data: number[] | Uint8Array) {\n            const cmd = data[0] >> 4;\n            const channel = data[0] & 0xf;\n            const data1 = data[1];\n            const data2 = data[2];\n            if (channel === 9) return;\n            if (cmd === 8 || (cmd === 9 && data2 === 0)) this.keyOff(channel, data1, data2);\n            else if (cmd === 9) this.keyOn(channel, data1, data2);\n            else if (cmd === 11) this.ctrlChange(channel, data1, data2);\n            else if (cmd === 14) this.pitchWheel(channel, data2 * 128.0 + data1);\n        }\n        ctrlChange(channel: number, ctrl: number, value: number) {\n            if (!this.fCtrlLabel[ctrl].length) return;\n            this.fCtrlLabel[ctrl].forEach((ctrl) => {\n                const { path } = ctrl;\n                this.setParamValue(path, remap(value, 0, 127, ctrl.min, ctrl.max));\n                if (this.outputHandler) this.outputHandler(path, this.getParamValue(path));\n            });\n        }\n        pitchWheel(channel: number, wheel: number) {\n            this.fPitchwheelLabel.forEach((pw) => {\n                this.setParamValue(pw.path, remap(wheel, 0, 16383, pw.min, pw.max));\n                if (this.outputHandler) this.outputHandler(pw.path, this.getParamValue(pw.path));\n            });\n        }\n        process(inputs: Float32Array[][], outputs: Float32Array[][], parameters: { [key: string]: Float32Array }) {\n            if (this.destroyed) return false;\n            const input = inputs[0];\n            const output = outputs[0];\n            // Check inputs\n            if (this.numIn > 0 && (!input || !input[0] || input[0].length === 0)) {\n                // console.log(\"Process input error\");\n                return true;\n            }\n            // Check outputs\n            if (this.numOut > 0 && (!output || !output[0] || output[0].length === 0)) {\n                // console.log(\"Process output error\");\n                return true;\n            }\n            // Copy inputs\n            if (input !== undefined) {\n                for (let chan = 0; chan < Math.min(this.numIn, input.length); ++chan) {\n                    const dspInput = this.dspInChannnels[chan];\n                    dspInput.set(input[chan]);\n                }\n            }\n            // Update controls (possibly needed for sample accurate control)\n            for (const path in parameters) {\n                const paramArray = parameters[path];\n                this.setParamValue(path, paramArray[0]);\n            }\n            // Possibly call an externally given callback (for instance to synchronize playing a MIDIFile...)\n            if (this.computeHandler) this.computeHandler(this.bufferSize);\n            if (this.voices) {\n                this.mixer.clearOutput(this.bufferSize, this.numOut, this.$outs); // First clear the outputs\n                for (let i = 0; i < this.voices; i++) { // Compute all running voices\n                    this.factory.compute(this.dspVoices$[i], this.bufferSize, this.$ins, this.$mixing); // Compute voice\n                    this.mixer.mixVoice(this.bufferSize, this.numOut, this.$mixing, this.$outs); // Mix it in result\n                }\n                if (this.effect) this.effect.compute(this.$effect, this.bufferSize, this.$outs, this.$outs); // Apply effect. Not a typo, effect is applied on the outs.\n            } else {\n                this.factory.compute(this.$dsp, this.bufferSize, this.$ins, this.$outs); // Compute\n            }\n            // Update bargraph\n            this.updateOutputs();\n            // Copy outputs\n            if (output !== undefined) {\n                for (let i = 0; i < Math.min(this.numOut, output.length); i++) {\n                    const dspOutput = this.dspOutChannnels[i];\n                    output[i].set(dspOutput);\n                }\n                this.port.postMessage({ type: \"plot\", value: output, index: this.$buffer++, events: this.cachedEvents });\n                this.cachedEvents = [];\n            }\n            return true;\n        }\n        printMemory() {\n            console.log(\"============== Memory layout ==============\");\n            console.log(\"dspMeta.size: \" + this.dspMeta.size);\n            console.log(\"$audioHeap: \" + this.$audioHeap);\n            console.log(\"$$audioHeapInputs: \" + this.$$audioHeapInputs);\n            console.log(\"$$audioHeapOutputs: \" + this.$$audioHeapOutputs);\n            console.log(\"$$audioHeapMixing: \" + this.$$audioHeapMixing);\n            console.log(\"$audioHeapInputs: \" + this.$audioHeapInputs);\n            console.log(\"$audioHeapOutputs: \" + this.$audioHeapOutputs);\n            console.log(\"$audioHeapMixing: \" + this.$audioHeapMixing);\n            console.log(\"$dsp: \" + this.$dsp);\n            if (this.dspVoices$) this.dspVoices$.forEach(($voice, i) => console.log(\"dspVoices$[\" + i + \"]: \" + $voice));\n            console.log(\"$effect: \" + this.$effect);\n            console.log(\"$mixing: \" + this.$mixing);\n        }\n    }\n\n    // Globals\n    // Synchronously compile and instantiate the WASM module\n    registerProcessor(FaustConst.id || \"mydsp\", FaustAudioWorkletProcessor);\n};\n","/* eslint-disable no-restricted-properties */\n/* eslint-disable @typescript-eslint/camelcase */\n/* eslint-disable object-property-newline */\nimport { TDspMeta, FaustWebAssemblyExports, TCompiledDsp } from \"./types\";\n\nexport class FaustOfflineProcessor {\n    private bufferSize = 1024;\n    private sampleRate: number;\n    private dspMeta: TDspMeta;\n    private $ins: number;\n    private $outs: number;\n    private dspInChannnels: Float32Array[];\n    private dspOutChannnels: Float32Array[];\n    private numIn: number;\n    private numOut: number;\n    private ptrSize: number;\n    private sampleSize: number;\n    private $audioHeap: number;\n    private $$audioHeapInputs: number;\n    private $$audioHeapOutputs: number;\n    private $audioHeapInputs: number;\n    private $audioHeapOutputs: number;\n    private $dsp: number;\n    private factory: FaustWebAssemblyExports;\n    private HEAP: ArrayBuffer;\n    private HEAP32: Int32Array;\n    private HEAPF32: Float32Array;\n    private output: Float32Array[];\n\n    static get importObject() {\n        return {\n            env: {\n                memory: undefined as WebAssembly.Memory, memoryBase: 0, tableBase: 0,\n                _abs: Math.abs,\n                // Float version\n                _acosf: Math.acos, _asinf: Math.asin, _atanf: Math.atan, _atan2f: Math.atan2,\n                _ceilf: Math.ceil, _cosf: Math.cos, _expf: Math.exp, _floorf: Math.floor,\n                _fmodf: (x: number, y: number) => x % y,\n                _logf: Math.log, _log10f: Math.log10, _max_f: Math.max, _min_f: Math.min,\n                _remainderf: (x: number, y: number) => x - Math.round(x / y) * y,\n                _powf: Math.pow, _roundf: Math.fround, _sinf: Math.sin, _sqrtf: Math.sqrt, _tanf: Math.tan,\n                _acoshf: Math.acosh, _asinhf: Math.asinh, _atanhf: Math.atanh,\n                _coshf: Math.cosh, _sinhf: Math.sinh, _tanhf: Math.tanh,\n                // Double version\n                _acos: Math.acos, _asin: Math.asin, _atan: Math.atan, _atan2: Math.atan2,\n                _ceil: Math.ceil, _cos: Math.cos, _exp: Math.exp, _floor: Math.floor,\n                _fmod: (x: number, y: number) => x % y,\n                _log: Math.log, _log10: Math.log10, _max_: Math.max, _min_: Math.min,\n                _remainder: (x: number, y: number) => x - Math.round(x / y) * y,\n                _pow: Math.pow, _round: Math.fround, _sin: Math.sin, _sqrt: Math.sqrt, _tan: Math.tan,\n                _acosh: Math.acosh, _asinh: Math.asinh, _atanh: Math.atanh,\n                _cosh: Math.cosh, _sinh: Math.sinh, _tanh: Math.tanh,\n                table: new WebAssembly.Table({ initial: 0, element: \"anyfunc\" })\n            }\n        };\n    }\n    async init(options: { compiledDsp?: TCompiledDsp; sampleRate?: number }) {\n        const { compiledDsp } = options;\n        if (!compiledDsp) throw new Error(\"No Dsp input\");\n\n        this.dspMeta = compiledDsp.dspMeta;\n\n        this.$ins = null;\n        this.$outs = null;\n\n        this.dspInChannnels = [];\n        this.dspOutChannnels = [];\n\n        this.numIn = this.dspMeta.inputs;\n        this.numOut = this.dspMeta.outputs;\n        // Memory allocator\n        this.ptrSize = 4;\n        this.sampleSize = 4;\n\n        // Create the WASM instance\n        const dspInstance = await WebAssembly.instantiate(compiledDsp.dspModule, FaustOfflineProcessor.importObject);\n        this.factory = dspInstance.exports as FaustWebAssemblyExports;\n        this.HEAP = this.factory.memory.buffer;\n        this.HEAP32 = new Int32Array(this.HEAP);\n        this.HEAPF32 = new Float32Array(this.HEAP);\n\n        this.output = new Array(this.numOut).fill(null).map(() => new Float32Array(this.bufferSize));\n    }\n    setup(options?: { sampleRate?: number }) {\n        if (!this.dspMeta) throw new Error(\"No Dsp\");\n        this.sampleRate = options && options.sampleRate || 48000;\n\n        // DSP is placed first with index 0. Audio buffer start at the end of DSP.\n        this.$audioHeap = this.dspMeta.size;\n\n        // Setup pointers offset\n        this.$$audioHeapInputs = this.$audioHeap;\n        this.$$audioHeapOutputs = this.$$audioHeapInputs + this.numIn * this.ptrSize;\n\n        // Setup buffer offset\n        this.$audioHeapInputs = this.$$audioHeapOutputs + (this.numOut * this.ptrSize);\n        this.$audioHeapOutputs = this.$audioHeapInputs + (this.numIn * this.bufferSize * this.sampleSize);\n        // Start of DSP memory : Mono DSP is placed first with index 0\n        this.$dsp = 0;\n\n        if (this.numIn > 0) {\n            this.$ins = this.$$audioHeapInputs;\n            for (let i = 0; i < this.numIn; i++) {\n                this.HEAP32[(this.$ins >> 2) + i] = this.$audioHeapInputs + this.bufferSize * this.sampleSize * i;\n            }\n            // Prepare Ins buffer tables\n            const dspInChans = this.HEAP32.subarray(this.$ins >> 2, (this.$ins + this.numIn * this.ptrSize) >> 2);\n            for (let i = 0; i < this.numIn; i++) {\n                this.dspInChannnels[i] = this.HEAPF32.subarray(dspInChans[i] >> 2, (dspInChans[i] + this.bufferSize * this.sampleSize) >> 2);\n            }\n        }\n        if (this.numOut > 0) {\n            this.$outs = this.$$audioHeapOutputs;\n            for (let i = 0; i < this.numOut; i++) {\n                this.HEAP32[(this.$outs >> 2) + i] = this.$audioHeapOutputs + this.bufferSize * this.sampleSize * i;\n            }\n            // Prepare Out buffer tables\n            const dspOutChans = this.HEAP32.subarray(this.$outs >> 2, (this.$outs + this.numOut * this.ptrSize) >> 2);\n            for (let i = 0; i < this.numOut; i++) {\n                this.dspOutChannnels[i] = this.HEAPF32.subarray(dspOutChans[i] >> 2, (dspOutChans[i] + this.bufferSize * this.sampleSize) >> 2);\n            }\n        }\n        // Init DSP\n        this.factory.init(this.$dsp, this.sampleRate);\n    }\n    compute() {\n        if (!this.factory) return this.output;\n        for (let i = 0; i < this.numIn; i++) {\n            this.dspInChannnels[i].fill(0);\n        }\n        this.factory.compute(this.$dsp, this.bufferSize, this.$ins, this.$outs); // Compute\n        // Copy outputs\n        if (this.output !== undefined) {\n            for (let i = 0; i < this.numOut; i++) {\n                this.output[i].set(this.dspOutChannnels[i]);\n            }\n        }\n        return this.output;\n    }\n    async plot(options?: { compiledDsp?: TCompiledDsp; size?: number; sampleRate?: number }) {\n        if (options && options.compiledDsp) await this.init(options);\n        this.setup(options);\n        const size = options && options.size || 128;\n        const plotted = new Array(this.numOut).fill(null).map(() => new Float32Array(size));\n        for (let i = 0; i < size; i += this.bufferSize) {\n            const computed = this.compute();\n            for (let j = 0; j < plotted.length; j++) {\n                plotted[j].set(size - i > this.bufferSize ? computed[j] : computed[j].subarray(0, size - i), i);\n            }\n        }\n        return plotted;\n    }\n}\n","/* eslint-disable no-restricted-properties */\n/* eslint-disable @typescript-eslint/camelcase */\n/* eslint-disable object-property-newline */\n/* eslint-disable object-curly-newline */\nimport { Faust } from \"./Faust\";\nimport { mixer32Module, createWasmMemory, createWasmImport, midiToFreq, remap } from \"./utils\";\nimport { TCompiledDsp, FaustScriptProcessorNode, TAudioNodeOptions, FaustWebAssemblyMixerExports, FaustWebAssemblyExports } from \"./types\";\n\nexport class FaustWasmToScriptProcessor {\n    faust: Faust;\n    constructor(faust: Faust) {\n        this.faust = faust;\n    }\n    private initNode(compiledDsp: TCompiledDsp, dspInstance: WebAssembly.Instance, effectInstance: WebAssembly.Instance, mixerInstance: WebAssembly.Instance, audioCtx: AudioContext, bufferSize?: number, memory?: WebAssembly.Memory, voices?: number, plotHandler?: (plotted: Float32Array[], index: number, events?: { type: string; data: any }[]) => any) {\n        let node: FaustScriptProcessorNode;\n        const dspMeta = compiledDsp.dspMeta;\n        const inputs = dspMeta.inputs;\n        const outputs = dspMeta.outputs;\n        try {\n            node = audioCtx.createScriptProcessor(bufferSize, inputs, outputs) as FaustScriptProcessorNode;\n        } catch (e) {\n            this.faust.error(\"Error in createScriptProcessor: \" + e.message);\n            throw e;\n        }\n        node.destroyed = false;\n        node.voices = voices;\n        node.dspMeta = dspMeta;\n\n        node.outputHandler = null;\n        node.computeHandler = null;\n        node.$ins = null;\n        node.$outs = null;\n\n        node.dspInChannnels = [];\n        node.dspOutChannnels = [];\n\n        node.fPitchwheelLabel = [];\n        node.fCtrlLabel = new Array(128).fill(null).map(() => []);\n\n        node.numIn = inputs;\n        node.numOut = outputs;\n\n        this.faust.log(node.numIn);\n        this.faust.log(node.numOut);\n\n        // Memory allocator\n        node.ptrSize = 4;\n        node.sampleSize = 4;\n\n        node.factory = dspInstance.exports as FaustWebAssemblyExports;\n        node.HEAP = node.voices ? memory.buffer : node.factory.memory.buffer;\n        node.HEAP32 = new Int32Array(node.HEAP);\n        node.HEAPF32 = new Float32Array(node.HEAP);\n\n        this.faust.log(node.HEAP);\n        this.faust.log(node.HEAP32);\n        this.faust.log(node.HEAPF32);\n\n        // JSON is as offset 0\n        /*\n        var HEAPU8 = new Uint8Array(sp.HEAP);\n        console.log(this.Heap2Str(HEAPU8));\n        */\n        // bargraph\n        node.outputsTimer = 5;\n        node.outputsItems = [];\n\n        // input items\n        node.inputsItems = [];\n\n        // Start of HEAP index\n\n        // DSP is placed first with index 0. Audio buffer start at the end of DSP.\n        node.$audioHeap = node.voices ? 0 : node.dspMeta.size;\n\n        // Setup pointers offset\n        node.$$audioHeapInputs = node.$audioHeap;\n        node.$$audioHeapOutputs = node.$$audioHeapInputs + node.numIn * node.ptrSize;\n        if (node.voices) {\n            node.$$audioHeapMixing = node.$$audioHeapOutputs + node.numOut * node.ptrSize;\n            // Setup buffer offset\n            node.$audioHeapInputs = node.$$audioHeapMixing + node.numOut * node.ptrSize;\n            node.$audioHeapOutputs = node.$audioHeapInputs + node.numIn * node.bufferSize * node.sampleSize;\n            node.$audioHeapMixing = node.$audioHeapOutputs + node.numOut * node.bufferSize * node.sampleSize;\n            node.$dsp = node.$audioHeapMixing + node.numOut * node.bufferSize * node.sampleSize;\n        } else {\n            node.$audioHeapInputs = node.$$audioHeapOutputs + node.numOut * node.ptrSize;\n            node.$audioHeapOutputs = node.$audioHeapInputs + node.numIn * node.bufferSize * node.sampleSize;\n            // Start of DSP memory : Mono DSP is placed first with index 0\n            node.$dsp = 0;\n        }\n\n        if (node.voices) {\n            node.effectMeta = compiledDsp.effectMeta;\n            node.$mixing = null;\n            node.fFreqLabel$ = [];\n            node.fGateLabel$ = [];\n            node.fGainLabel$ = [];\n            node.fDate = 0;\n\n            node.mixer = mixerInstance.exports as FaustWebAssemblyMixerExports;\n            node.effect = effectInstance ? effectInstance.exports as FaustWebAssemblyExports : null;\n            this.faust.log(node.mixer);\n            this.faust.log(node.factory);\n            this.faust.log(node.effect);\n            // Start of DSP memory ('polyphony' DSP voices)\n            node.dspVoices$ = [];\n            node.dspVoicesState = [];\n            node.dspVoicesLevel = [];\n            node.dspVoicesDate = [];\n\n            node.kActiveVoice = 0;\n            node.kFreeVoice = -1;\n            node.kReleaseVoice = -2;\n            node.kNoVoice = -3;\n\n            for (let i = 0; i < node.voices; i++) {\n                node.dspVoices$[i] = node.$dsp + i * node.dspMeta.size;\n                node.dspVoicesState[i] = node.kFreeVoice;\n                node.dspVoicesLevel[i] = 0;\n                node.dspVoicesDate[i] = 0;\n            }\n            // Effect memory starts after last voice\n            node.$effect = node.dspVoices$[node.voices - 1] + node.dspMeta.size;\n        }\n\n        node.pathTable$ = {};\n\n        node.$buffer = 0;\n        node.cachedEvents = [];\n        node.plotHandler = plotHandler;\n\n        node.updateOutputs = () => {\n            if (node.outputsItems.length > 0 && node.outputHandler && node.outputsTimer-- === 0) {\n                node.outputsTimer = 5;\n                node.outputsItems.forEach(item => node.outputHandler(item, node.factory.getParamValue(node.$dsp, node.pathTable$[item])));\n            }\n        };\n\n        // JSON parsing\n        node.parseUI = ui => ui.forEach(group => node.parseGroup(group));\n        node.parseGroup = group => (group.items ? node.parseItems(group.items) : null);\n        node.parseItems = items => items.forEach(item => node.parseItem(item));\n        node.parseItem = (item) => {\n            if (item.type === \"vgroup\" || item.type === \"hgroup\" || item.type === \"tgroup\") {\n                node.parseItems(item.items);\n            } else if (item.type === \"hbargraph\" || item.type === \"vbargraph\") {\n                // Keep bargraph adresses\n                node.outputsItems.push(item.address);\n                node.pathTable$[item.address] = item.index;\n            } else if (item.type === \"vslider\" || item.type === \"hslider\" || item.type === \"button\" || item.type === \"checkbox\" || item.type === \"nentry\") {\n                // Keep inputs adresses\n                node.inputsItems.push(item.address);\n                node.pathTable$[item.address] = item.index;\n                if (!item.meta) return;\n                item.meta.forEach((meta) => {\n                    const { midi } = meta;\n                    if (!midi) return;\n                    const strMidi = midi.trim();\n                    if (strMidi === \"pitchwheel\") {\n                        node.fPitchwheelLabel.push({ path: item.address, min: item.min, max: item.max });\n                    } else {\n                        const matched = strMidi.match(/^ctrl\\s(\\d+)/);\n                        if (!matched) return;\n                        node.fCtrlLabel[parseInt(matched[1])].push({ path: item.address, min: item.min, max: item.max });\n                    }\n                });\n            }\n        };\n\n        if (node.voices) {\n            node.getPlayingVoice = (pitch) => {\n                let voice = node.kNoVoice;\n                let oldestDatePlaying = Number.MAX_VALUE;\n                for (let i = 0; i < node.voices; i++) {\n                    if (node.dspVoicesState[i] === pitch) {\n                        // Keeps oldest playing voice\n                        if (node.dspVoicesDate[i] < oldestDatePlaying) {\n                            oldestDatePlaying = node.dspVoicesDate[i];\n                            voice = i;\n                        }\n                    }\n                }\n                return voice;\n            };\n            // Always returns a voice\n            node.allocVoice = (voice) => {\n                // so that envelop is always re-initialized\n                node.factory.instanceClear(node.dspVoices$[voice]);\n                node.dspVoicesDate[voice] = node.fDate++;\n                node.dspVoicesState[voice] = node.kActiveVoice;\n                return voice;\n            };\n            node.getFreeVoice = () => {\n                for (let i = 0; i < node.voices; i++) {\n                    if (node.dspVoicesState[i] === node.kFreeVoice) return node.allocVoice(i);\n                }\n                let voiceRelease = node.kNoVoice;\n                let voicePlaying = node.kNoVoice;\n                let oldestDateRelease = Number.MAX_VALUE;\n                let oldestDatePlaying = Number.MAX_VALUE;\n                for (let i = 0; i < node.voices; i++) { // Scan all voices\n                    // Try to steal a voice in kReleaseVoice mode...\n                    if (node.dspVoicesState[i] === node.kReleaseVoice) {\n                        // Keeps oldest release voice\n                        if (node.dspVoicesDate[i] < oldestDateRelease) {\n                            oldestDateRelease = node.dspVoicesDate[i];\n                            voiceRelease = i;\n                        }\n                    } else if (node.dspVoicesDate[i] < oldestDatePlaying) {\n                        oldestDatePlaying = node.dspVoicesDate[i];\n                        voicePlaying = i;\n                    }\n                }\n                // Then decide which one to steal\n                if (oldestDateRelease !== Number.MAX_VALUE) {\n                    this.faust.log(`Steal release voice : voice_date = ${node.dspVoicesDate[voiceRelease]} cur_date = ${node.fDate} voice = ${voiceRelease}`);\n                    return node.allocVoice(voiceRelease);\n                }\n                if (oldestDatePlaying !== Number.MAX_VALUE) {\n                    this.faust.log(`Steal playing voice : voice_date = ${node.dspVoicesDate[voicePlaying]} cur_date = ${node.fDate} voice = ${voicePlaying}`);\n                    return node.allocVoice(voicePlaying);\n                }\n                return node.kNoVoice;\n            };\n            node.keyOn = (channel, pitch, velocity) => {\n                node.cachedEvents.push({ type: \"keyOn\", data: [channel, pitch, velocity] });\n                const voice = node.getFreeVoice();\n                this.faust.log(\"keyOn voice \" + voice);\n                node.fFreqLabel$.forEach($ => node.factory.setParamValue(node.dspVoices$[voice], $, midiToFreq(pitch)));\n                node.fGateLabel$.forEach($ => node.factory.setParamValue(node.dspVoices$[voice], $, 1));\n                node.fGainLabel$.forEach($ => node.factory.setParamValue(node.dspVoices$[voice], $, velocity / 127));\n                node.dspVoicesState[voice] = pitch;\n            };\n            node.keyOff = (channel, pitch, velocity) => { // eslint-disable-line @typescript-eslint/no-unused-vars\n                node.cachedEvents.push({ type: \"keyOff\", data: [channel, pitch, velocity] });\n                const voice = node.getPlayingVoice(pitch);\n                if (voice === node.kNoVoice) return this.faust.log(\"Playing voice not found...\");\n                node.fGateLabel$.forEach($ => node.factory.setParamValue(node.dspVoices$[voice], $, 0)); // No use of velocity for now...\n                node.dspVoicesState[voice] = node.kReleaseVoice; // Release voice\n                return this.faust.log(\"keyOff voice \" + voice);\n            };\n            node.allNotesOff = () => {\n                node.cachedEvents.push({ type: \"ctrlChange\", data: [0, 123, 0] });\n                for (let i = 0; i < node.voices; i++) {\n                    node.fGateLabel$.forEach($gate => node.factory.setParamValue(node.dspVoices$[i], $gate, 0));\n                    node.dspVoicesState[i] = node.kReleaseVoice;\n                }\n            };\n        }\n        node.midiMessage = (data) => {\n            node.cachedEvents.push({ data, type: \"midi\" });\n            const cmd = data[0] >> 4;\n            const channel = data[0] & 0xf;\n            const data1 = data[1];\n            const data2 = data[2];\n            if (channel === 9) return undefined;\n            if (node.voices) {\n                if (cmd === 8 || (cmd === 9 && data2 === 0)) return node.keyOff(channel, data1, data2);\n                if (cmd === 9) return node.keyOn(channel, data1, data2);\n            }\n            if (cmd === 11) return node.ctrlChange(channel, data1, data2);\n            if (cmd === 14) return node.pitchWheel(channel, (data2 * 128.0 + data1));\n            return undefined;\n        };\n        node.ctrlChange = (channel, ctrl, value) => {\n            node.cachedEvents.push({ type: \"ctrlChange\", data: [channel, ctrl, value] });\n            if (!node.fCtrlLabel[ctrl].length) return;\n            node.fCtrlLabel[ctrl].forEach((ctrl) => {\n                const { path } = ctrl;\n                node.setParamValue(path, remap(value, 0, 127, ctrl.min, ctrl.max));\n                if (node.outputHandler) node.outputHandler(path, node.getParamValue(path));\n            });\n        };\n        node.pitchWheel = (channel, wheel) => {\n            node.cachedEvents.push({ type: \"pitchWheel\", data: [channel, wheel] });\n            node.fPitchwheelLabel.forEach((pw) => {\n                node.setParamValue(pw.path, remap(wheel, 0, 16383, pw.min, pw.max));\n                if (node.outputHandler) node.outputHandler(pw.path, node.getParamValue(pw.path));\n            });\n        };\n        node.compute = (e) => {\n            if (node.destroyed) return false;\n            for (let i = 0; i < node.numIn; i++) { // Read inputs\n                const input = e.inputBuffer.getChannelData(i);\n                const dspInput = node.dspInChannnels[i];\n                dspInput.set(input);\n            }\n            // Possibly call an externally given callback (for instance to synchronize playing a MIDIFile...)\n            if (node.computeHandler) node.computeHandler(node.bufferSize);\n            if (node.voices) {\n                node.mixer.clearOutput(node.bufferSize, node.numOut, node.$outs); // First clear the outputs\n                for (let i = 0; i < node.voices; i++) { // Compute all running voices\n                    node.factory.compute(node.dspVoices$[i], node.bufferSize, node.$ins, node.$mixing); // Compute voice\n                    node.mixer.mixVoice(node.bufferSize, node.numOut, node.$mixing, node.$outs); // Mix it in result\n                }\n                if (node.effect) node.effect.compute(node.$effect, node.bufferSize, node.$outs, node.$outs); // Apply effect. Not a typo, effect is applied on the outs.\n            } else {\n                node.factory.compute(node.$dsp, node.bufferSize, node.$ins, node.$outs); // Compute\n            }\n            node.updateOutputs(); // Update bargraph\n            const outputs = new Array(node.numOut).fill(null).map(() => new Float32Array(node.bufferSize));\n            for (let i = 0; i < node.numOut; i++) { // Write outputs\n                const output = e.outputBuffer.getChannelData(i);\n                const dspOutput = node.dspOutChannnels[i];\n                output.set(dspOutput);\n                outputs[i].set(dspOutput);\n            }\n            if (node.plotHandler) node.plotHandler(outputs, node.$buffer++, node.cachedEvents.length ? node.cachedEvents : undefined);\n            node.cachedEvents = [];\n            return true;\n        };\n        node.setup = () => { // Setup web audio context\n            this.faust.log(\"buffer_size \" + node.bufferSize);\n            node.onaudioprocess = node.compute;\n            if (node.numIn > 0) {\n                node.$ins = node.$$audioHeapInputs;\n                for (let i = 0; i < node.numIn; i++) {\n                    node.HEAP32[(node.$ins >> 2) + i] = node.$audioHeapInputs + node.bufferSize * node.sampleSize * i;\n                }\n                // Prepare Ins buffer tables\n                const dspInChans = node.HEAP32.subarray(node.$ins >> 2, (node.$ins + node.numIn * node.ptrSize) >> 2);\n                for (let i = 0; i < node.numIn; i++) {\n                    node.dspInChannnels[i] = node.HEAPF32.subarray(dspInChans[i] >> 2, (dspInChans[i] + node.bufferSize * node.sampleSize) >> 2);\n                }\n            }\n            if (node.numOut > 0) {\n                node.$outs = node.$$audioHeapOutputs;\n                if (node.voices) node.$mixing = node.$$audioHeapMixing;\n                for (let i = 0; i < node.numOut; i++) {\n                    node.HEAP32[(node.$outs >> 2) + i] = node.$audioHeapOutputs + node.bufferSize * node.sampleSize * i;\n                    if (node.voices) node.HEAP32[(node.$mixing >> 2) + i] = node.$audioHeapMixing + node.bufferSize * node.sampleSize * i;\n                }\n                // Prepare Out buffer tables\n                const dspOutChans = node.HEAP32.subarray(node.$outs >> 2, (node.$outs + node.numOut * node.ptrSize) >> 2);\n                for (let i = 0; i < node.numOut; i++) {\n                    node.dspOutChannnels[i] = node.HEAPF32.subarray(dspOutChans[i] >> 2, (dspOutChans[i] + node.bufferSize * node.sampleSize) >> 2);\n                }\n            }\n            // Parse JSON UI part\n            node.parseUI(node.dspMeta.ui);\n            if (node.effect) node.parseUI(node.effectMeta.ui);\n\n            // keep 'keyOn/keyOff' labels\n            if (node.voices) {\n                node.inputsItems.forEach((item) => {\n                    if (item.endsWith(\"/gate\")) node.fGateLabel$.push(node.pathTable$[item]);\n                    else if (item.endsWith(\"/freq\")) node.fFreqLabel$.push(node.pathTable$[item]);\n                    else if (item.endsWith(\"/gain\")) node.fGainLabel$.push(node.pathTable$[item]);\n                });\n                // Init DSP voices\n                node.dspVoices$.forEach($voice => node.factory.init($voice, audioCtx.sampleRate));\n                // Init effect\n                if (node.effect) node.effect.init(node.$effect, audioCtx.sampleRate);\n            } else {\n                // Init DSP\n                node.factory.init(node.$dsp, audioCtx.sampleRate);\n            }\n        };\n        node.getSampleRate = () => audioCtx.sampleRate;\n        node.getNumInputs = () => node.numIn;\n        node.getNumOutputs = () => node.numOut;\n        node.init = (sampleRate) => {\n            if (node.voices) node.dspVoices$.forEach($voice => node.factory.init($voice, sampleRate));\n            else node.factory.init(node.$dsp, sampleRate);\n        };\n        node.instanceInit = (sampleRate) => {\n            if (node.voices) node.dspVoices$.forEach($voice => node.factory.instanceInit($voice, sampleRate));\n            else node.factory.instanceInit(node.$dsp, sampleRate);\n        };\n        node.instanceConstants = (sampleRate) => {\n            if (node.voices) node.dspVoices$.forEach($voice => node.factory.instanceConstants($voice, sampleRate));\n            else node.factory.instanceConstants(node.$dsp, sampleRate);\n        };\n        node.instanceResetUserInterface = () => {\n            if (node.voices) node.dspVoices$.forEach($voice => node.factory.instanceResetUserInterface($voice));\n            else node.factory.instanceResetUserInterface(node.$dsp);\n        };\n        node.instanceClear = () => {\n            if (node.voices) node.dspVoices$.forEach($voice => node.factory.instanceClear($voice));\n            else node.factory.instanceClear(node.$dsp);\n        };\n        node.metadata = handler => (node.dspMeta.meta ? node.dspMeta.meta.forEach(meta => handler.declare(Object.keys(meta)[0], meta[Object.keys(meta)[0]])) : undefined);\n        node.setOutputParamHandler = handler => node.outputHandler = handler;\n        node.getOutputParamHandler = () => node.outputHandler;\n        node.setComputeHandler = handler => node.computeHandler = handler;\n        node.getComputeHandler = () => node.computeHandler;\n        const findPath = (o: any, p: string) => {\n            if (typeof o !== \"object\") return false;\n            if (o.address) {\n                if (o.address === p) return true;\n                return false;\n            }\n            for (const k in o) {\n                if (findPath(o[k], p)) return true;\n            }\n            return false;\n        };\n        node.setParamValue = (path, value) => {\n            node.cachedEvents.push({ type: \"param\", data: { path, value } });\n            if (node.voices) {\n                if (node.effect && findPath(node.effectMeta.ui, path)) node.effect.setParamValue(node.$effect, node.pathTable$[path], value);\n                else node.dspVoices$.forEach($voice => node.factory.setParamValue($voice, node.pathTable$[path], value));\n            } else {\n                node.factory.setParamValue(node.$dsp, node.pathTable$[path], value);\n            }\n        };\n        node.getParamValue = (path) => {\n            if (node.voices) {\n                if (node.effect && findPath(node.effectMeta.ui, path)) return node.effect.getParamValue(node.$effect, node.pathTable$[path]);\n                return node.factory.getParamValue(node.dspVoices$[0], node.pathTable$[path]);\n            }\n            return node.factory.getParamValue(node.$dsp, node.pathTable$[path]);\n        };\n        node.getParams = () => node.inputsItems;\n        node.getJSON = () => {\n            if (node.voices) {\n                const o = node.dspMeta;\n                const e = node.effectMeta;\n                const r = { ...o };\n                if (e) {\n                    r.ui = [{ type: \"tgroup\", label: \"Sequencer\", items: [\n                        { type: \"vgroup\", label: \"Instrument\", items: o.ui },\n                        { type: \"vgroup\", label: \"Effect\", items: e.ui }\n                    ] }];\n                } else {\n                    r.ui = [{ type: \"tgroup\", label: \"Polyphonic\", items: [\n                        { type: \"vgroup\", label: \"Voices\", items: o.ui }\n                    ] }];\n                }\n                return JSON.stringify(r);\n            }\n            return JSON.stringify(node.dspMeta);\n        };\n        node.getUI = () => {\n            if (node.voices) {\n                const o = node.dspMeta;\n                const e = node.effectMeta;\n                if (e) {\n                    return [{ type: \"tgroup\", label: \"Sequencer\", items: [\n                        { type: \"vgroup\", label: \"Instrument\", items: o.ui },\n                        { type: \"vgroup\", label: \"Effect\", items: e.ui }\n                    ] }];\n                }\n                return [{ type: \"tgroup\", label: \"Polyphonic\", items: [\n                    { type: \"vgroup\", label: \"Voices\", items: o.ui }\n                ] }];\n            }\n            return node.dspMeta.ui;\n        };\n        node.destroy = () => {\n            node.destroyed = true;\n            delete node.outputHandler;\n            delete node.computeHandler;\n            delete node.plotHandler;\n        };\n        // Init resulting DSP\n        node.setup();\n        return node;\n    }\n    /**\n     * Create a ScriptProcessorNode Web Audio object\n     * by loading and compiling the Faust wasm file\n     *\n     * @param {TAudioNodeOptions} optionsIn\n     * @returns {Promise<FaustScriptProcessorNode>} a Promise for valid WebAudio ScriptProcessorNode object or null\n     */\n    async getNode(optionsIn: TAudioNodeOptions): Promise<FaustScriptProcessorNode> {\n        const { compiledDsp, audioCtx, bufferSize: bufferSizeIn, voices, plotHandler } = optionsIn;\n        const bufferSize = bufferSizeIn || 512;\n        let node: FaustScriptProcessorNode;\n        try {\n            let effectInstance: WebAssembly.Instance;\n            let mixerInstance: WebAssembly.Instance;\n            const memory = createWasmMemory(voices, compiledDsp.dspMeta, compiledDsp.effectMeta, bufferSize);\n            const importObject = createWasmImport(voices, memory);\n            if (voices) {\n                const mixerObject = { imports: { print: console.log }, memory: { memory } }; // eslint-disable-line no-console\n                mixerInstance = new WebAssembly.Instance(mixer32Module, mixerObject);\n                try {\n                    effectInstance = await WebAssembly.instantiate(compiledDsp.effectModule, importObject);\n                } catch (e) {} // eslint-disable-line no-empty\n            }\n            const dspInstance = await WebAssembly.instantiate(compiledDsp.dspModule, importObject);\n            node = this.initNode(compiledDsp, dspInstance, effectInstance, mixerInstance, audioCtx, bufferSize, memory, voices, plotHandler);\n        } catch (e) {\n            this.faust.error(\"Faust \" + compiledDsp.shaKey + \" cannot be loaded or compiled\");\n            throw e;\n        }\n        return node;\n    }\n}\n","class LibFaustLoader {\n    static async fetchModule(url) {\n        const toExport = {};\n        window.exports = toExport;\n        window.module = { exports: toExport };\n        const esm = await import(/* webpackIgnore: true */url);\n        const esmKeys = Object.keys(esm);\n        if (esmKeys.length === 1 && esmKeys[0] === \"default\") return esm.default;\n        if (esmKeys.length) return esm;\n        const exported = window.module.exports;\n        delete window.exports;\n        delete window.module;\n        return exported;\n    }\n    static load(jsLocation, wasmLocation, dataLocation) {\n        const locateFile = (path, dir) => ({\n            \"libfaust-wasm.wasm\": wasmLocation,\n            \"libfaust-wasm.data\": dataLocation\n        }[path]) || dir + path;\n        return this.fetchModule(jsLocation)\n            .then((LibFaust) => {\n                const libFaust = LibFaust({ locateFile });\n                libFaust.then = (f) => { // Workaround of issue https://github.com/emscripten-core/emscripten/issues/5820\n                    delete libFaust.then;\n                    // We may already be ready to run code at this time. if\n                    // so, just queue a call to the callback.\n                    if (libFaust.calledRun) {\n                        f(libFaust);\n                    } else {\n                        // we are not ready to call then() yet. we must call it\n                        // at the same time we would call onRuntimeInitialized.\n                        const _onRuntimeInitialized = libFaust.onRuntimeInitialized;\n                        libFaust.onRuntimeInitialized = () => {\n                            if (_onRuntimeInitialized) _onRuntimeInitialized();\n                            f(libFaust);\n                        };\n                    }\n                    return libFaust;\n                };\n                libFaust.lengthBytesUTF8 = (str) => {\n                    let len = 0;\n                    for (let i = 0; i < str.length; ++i) {\n                        let u = str.charCodeAt(i);\n                        // eslint-disable-next-line no-mixed-operators\n                        if (u >= 55296 && u <= 57343) u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i) & 1023;\n                        if (u <= 127) ++len;\n                        else if (u <= 2047) len += 2;\n                        else if (u <= 65535) len += 3;\n                        else if (u <= 2097151) len += 4;\n                        else if (u <= 67108863) len += 5;\n                        else len += 6;\n                    }\n                    return len;\n                };\n                return libFaust;\n            });\n    }\n}\nexport { LibFaustLoader };\n","export { Faust } from \"./Faust\";\nexport { FaustAudioWorkletNode } from \"./FaustAudioWorkletNode\";\n","/* eslint-disable @typescript-eslint/camelcase */\n/* eslint-disable object-property-newline */\nimport { TDspMeta, TFaustCompileArgs } from \"./types\";\nimport mixer32DataURI from \"./wasm/mixer32.wasm\";\n\nexport const ab2str = (buf: ArrayBuffer): string => (buf ? String.fromCharCode.apply(null, new Uint8Array(buf)) : null);\nexport const str2ab = (str: string): ArrayBuffer => {\n    if (!str) return null;\n    const buf = new ArrayBuffer(str.length);\n    const bufView = new Uint8Array(buf);\n    for (let i = 0, strLen = str.length; i < strLen; i++) {\n        bufView[i] = str.charCodeAt(i);\n    }\n    return buf;\n};\nexport const atoUint6 = (nChr: number) => { // eslint-disable-line arrow-body-style\n    return nChr > 64 && nChr < 91\n        ? nChr - 65\n        : nChr > 96 && nChr < 123\n            ? nChr - 71\n            : nChr > 47 && nChr < 58\n                ? nChr + 4\n                : nChr === 43\n                    ? 62\n                    : nChr === 47\n                        ? 63\n                        : 0;\n};\nexport const atoab = (sBase64: string, nBlocksSize?: number) => {\n    if (typeof window.atob === \"function\") return str2ab(atob(sBase64));\n    const sB64Enc = sBase64.replace(/[^A-Za-z0-9+/]/g, \"\");\n    const nInLen = sB64Enc.length;\n    const nOutLen = nBlocksSize ? Math.ceil((nInLen * 3 + 1 >> 2) / nBlocksSize) * nBlocksSize : nInLen * 3 + 1 >> 2;\n    const taBytes = new Uint8Array(nOutLen);\n    for (let nMod3, nMod4, nUint24 = 0, nOutIdx = 0, nInIdx = 0; nInIdx < nInLen; nInIdx++) {\n        nMod4 = nInIdx & 3;\n        nUint24 |= atoUint6(sB64Enc.charCodeAt(nInIdx)) << 18 - 6 * nMod4;\n        if (nMod4 === 3 || nInLen - nInIdx === 1) {\n            for (nMod3 = 0; nMod3 < 3 && nOutIdx < nOutLen; nMod3++, nOutIdx++) {\n                taBytes[nOutIdx] = nUint24 >>> (16 >>> nMod3 & 24) & 255;\n            }\n            nUint24 = 0;\n        }\n    }\n    return taBytes.buffer;\n};\nexport const heap2Str = (buf: number[]) => {\n    let str = \"\";\n    let i = 0;\n    while (buf[i] !== 0) {\n        str += String.fromCharCode(buf[i++]);\n    }\n    return str;\n};\nexport const mixer32Module = new WebAssembly.Module(atoab(mixer32DataURI.split(\",\")[1]));\nexport const midiToFreq = (note: number) => 440.0 * 2 ** ((note - 69) / 12);\nexport const remap = (v: number, mn0: number, mx0: number, mn1: number, mx1: number) => (v - mn0) / (mx0 - mn0) * (mx1 - mn1) + mn1;\nexport const findPath = (o: any, p: string) => {\n    if (typeof o !== \"object\") return false;\n    if (o.address) {\n        return (o.address === p);\n    }\n    for (const k in o) {\n        if (findPath(o[k], p)) return true;\n    }\n    return false;\n};\nexport const findPathClosure = () => {\n    const findPath = (o: any, p: string) => {\n        if (typeof o !== \"object\") return false;\n        if (o.address) {\n            return (o.address === p);\n        }\n        for (const k in o) {\n            if (findPath(o[k], p)) return true;\n        }\n        return false;\n    };\n    return findPath;\n};\nexport const createWasmImport = (voices: number, memory: WebAssembly.Memory) => ({\n    env: {\n        memory: voices ? memory : undefined, memoryBase: 0, tableBase: 0,\n        _abs: Math.abs,\n        // Float version\n        _acosf: Math.acos, _asinf: Math.asin, _atanf: Math.atan, _atan2f: Math.atan2,\n        _ceilf: Math.ceil, _cosf: Math.cos, _expf: Math.exp, _floorf: Math.floor,\n        _fmodf: (x: number, y: number) => x % y,\n        _logf: Math.log, _log10f: Math.log10, _max_f: Math.max, _min_f: Math.min,\n        _remainderf: (x: number, y: number) => x - Math.round(x / y) * y,\n        _powf: Math.pow, _roundf: Math.fround, _sinf: Math.sin, _sqrtf: Math.sqrt, _tanf: Math.tan,\n        _acoshf: Math.acosh, _asinhf: Math.asinh, _atanhf: Math.atanh,\n        _coshf: Math.cosh, _sinhf: Math.sinh, _tanhf: Math.tanh,\n        // Double version\n        _acos: Math.acos, _asin: Math.asin, _atan: Math.atan, _atan2: Math.atan2,\n        _ceil: Math.ceil, _cos: Math.cos, _exp: Math.exp, _floor: Math.floor,\n        _fmod: (x: number, y: number) => x % y,\n        _log: Math.log, _log10: Math.log10, _max_: Math.max, _min_: Math.min,\n        _remainder: (x: number, y: number) => x - Math.round(x / y) * y,\n        _pow: Math.pow, _round: Math.fround, _sin: Math.sin, _sqrt: Math.sqrt, _tan: Math.tan,\n        _acosh: Math.acosh, _asinh: Math.asinh, _atanh: Math.atanh,\n        _cosh: Math.cosh, _sinh: Math.sinh, _tanh: Math.tanh,\n        table: new WebAssembly.Table({ initial: 0, element: \"anyfunc\" })\n    }\n});\nexport const createWasmMemory = (voicesIn: number, dspMeta: TDspMeta, effectMeta: TDspMeta, bufferSize: number) => {\n    // Hack : at least 4 voices (to avoid weird wasm memory bug?)\n    const voices = Math.max(4, voicesIn);\n    // Memory allocator\n    const ptrSize = 4;\n    const sampleSize = 4;\n    const pow2limit = (x: number) => {\n        let n = 65536; // Minimum = 64 kB\n        while (n < x) { n *= 2; }\n        return n;\n    };\n    const effectSize = effectMeta ? effectMeta.size : 0;\n    let memorySize = pow2limit(\n        effectSize\n        + dspMeta.size * voices\n        + (dspMeta.inputs + dspMeta.outputs * 2)\n        * (ptrSize + bufferSize * sampleSize)\n    ) / 65536;\n    memorySize = Math.max(2, memorySize); // As least 2\n    return new WebAssembly.Memory({ initial: memorySize, maximum: memorySize });\n};\nexport const toArgv = (args: TFaustCompileArgs) => {\n    const argv: string[] = [];\n    for (const key in args) {\n        const arg = args[key];\n        if (Array.isArray(arg)) arg.forEach((s: string) => argv.push(key, s));\n        else if (typeof arg === \"number\") argv.push(key, arg.toString());\n        else argv.push(key, arg);\n    }\n    return argv;\n};\n","export default \"data:application/wasm;base64,AGFzbQEAAAABj4CAgAACYAN/f38AYAR/f39/AX0CkoCAgAABBm1lbW9yeQZtZW1vcnkCAAIDg4CAgAACAAEHmoCAgAACC2NsZWFyT3V0cHV0AAAIbWl4Vm9pY2UAAQqKgoCAAALigICAAAEDfwJAQQAhBQNAAkAgAiAFQQJ0aigCACEDQQAhBANAAkAgAyAEQQJ0akMAAAAAOAIAIARBAWohBCAEIABIBEAMAgUMAQsACwsgBUEBaiEFIAUgAUgEQAwCBQwBCwALCwsLnYGAgAACBH8DfQJ9QQAhB0MAAAAAIQgDQAJAQQAhBiACIAdBAnRqKAIAIQQgAyAHQQJ0aigCACEFA0ACQCAEIAZBAnRqKgIAIQkgCCAJi5chCCAFIAZBAnRqKgIAIQogBSAGQQJ0aiAKIAmSOAIAIAZBAWohBiAGIABIBEAMAgUMAQsACwsgB0EBaiEHIAcgAUgEQAwCBQwBCwALCyAIDwsL\""],"sourceRoot":""}